openapi: 3.0.3
info:
    title: 'PAM UGM'
    description: 'API aplikasi PAMPsi'
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /admin/activity:
        get:
            summary: "List Activity\nuntuk list activity"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[log_name]'
                    description: "select kolom 'log_name','description','subject_type',\n'subject_id','causer_type','causer_id','properties','created_at','updated_at'"
                    example: voluptas
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'log_name','description','subject_type',\n'subject_id','causer_type','causer_id','properties','created_at','updated_at'"
                        example: voluptas
                -
                    in: query
                    name: 'filter[log_name]'
                    description: 'Filter by log_name.'
                    example: et
                    required: false
                    schema:
                        type: string
                        description: 'Filter by log_name.'
                        example: et
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: corporis
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: corporis
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 6
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 6
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 12
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 12
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: veniam
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: veniam
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Activity
    '/user/recent-activity/{model}':
        get:
            summary: 'Recent Activity'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Activity
        parameters:
            -
                in: path
                name: model
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: magnam
    '/admin/user/{id}/status':
        get:
            summary: 'Update status akun psikolog'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Admin
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: officiis
    /admin/agenda:
        get:
            summary: "List Agenda\nuntuk list agenda"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[agenda]'
                    description: "select kolom 'nama_kategori','judul','deskripsi','lokasi','start_date','end_date','fasilitas'\n,'pemater','poster','visible'"
                    example: quia
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'nama_kategori','judul','deskripsi','lokasi','start_date','end_date','fasilitas'\n,'pemater','poster','visible'"
                        example: quia
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: vel
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: vel
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: eum
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: eum
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 17
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 5
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 5
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Agenda
    '/admin/agenda/{id}/view':
        get:
            summary: "View Agenda\nuntuk view agenda"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null }
                                properties:
                                    data: { type: object, example: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null } }
            tags:
                - Agenda
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 7
                required: true
                schema:
                    type: integer
    /admin/agenda/create:
        post:
            summary: "Create Agenda\nuntuk create agenda"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null }
                                properties:
                                    data: { type: object, example: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null } }
            tags:
                - Agenda
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: amet
                                judul:
                                    type: string
                                    description: ''
                                    example: numquam
                                deskripsi:
                                    type: text
                                    description: optional
                                    example: et
                                lokasi:
                                    type: string
                                    description: ''
                                    example: doloribus
                                start_date:
                                    type: dateTime
                                    description: ''
                                    example: consequatur
                                end_date:
                                    type: dateTime
                                    description: ''
                                    example: tenetur
                                fasilitas:
                                    type: string
                                    description: optional
                                    example: enim
                                pemateri:
                                    type: string
                                    description: ''
                                    example: aut
                                objPoster:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - nama_kategori
                                - judul
                                - lokasi
                                - start_date
                                - end_date
                                - pemateri
    '/admin/agenda/{id}/update':
        post:
            summary: "Update Agenda\nuntuk update agenda"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null }
                                properties:
                                    data: { type: object, example: { id: null, nama_kategori: null, judul: null, deskripsi: null, lokasi: null, start_date: null, end_date: null, fasilitas: null, pemateri: null, poster: null } }
            tags:
                - Agenda
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: optional
                                    example: quis
                                judul:
                                    type: string
                                    description: optional
                                    example: et
                                deskripsi:
                                    type: text
                                    description: optional
                                    example: quo
                                lokasi:
                                    type: string
                                    description: optional
                                    example: dolorem
                                start_date:
                                    type: dateTime
                                    description: optional
                                    example: occaecati
                                end_date:
                                    type: dateTime
                                    description: optional
                                    example: ex
                                fasilitas:
                                    type: string
                                    description: optional
                                    example: labore
                                pemateri:
                                    type: string
                                    description: optional
                                    example: corrupti
                                objPoster:
                                    type: string
                                    format: binary
                                    description: optional
        parameters:
            -
                in: path
                name: id
                description: ''
                example: et
                required: true
                schema:
                    type: string
    '/admin/agenda/{id}/delete':
        post:
            summary: "Delete Agenda\nuntuk hapus agenda"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agenda
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 4
                required: true
                schema:
                    type: integer
    '/admin/agenda/{id}/psikolog/{idPsikolog}':
        get:
            summary: 'daftar agenda'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Agenda
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter. id agenda'
                required: true
                schema:
                    type: integer
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: 5
            -
                in: path
                name: idPsikolog
                description: ''
                example: aut
                required: true
                schema:
                    type: string
    '/admin/agenda/{id}/participant':
        get:
            summary: 'data participant agenda'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Agenda
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter. id agenda'
                required: true
                schema:
                    type: integer
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: 5
    /admin/agenda/dokumentasi:
        post:
            summary: "Create Agenda Dokumentasi\nuntuk create agenda dokumentasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Agenda
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                agenda_id:
                                    type: integer
                                    description: ''
                                    example: 14
                                objFile:
                                    type: image
                                    description: ''
                                    example: consequuntur
            security: []
    '/admin/agenda/{id}/dokumentasi/list':
        get:
            summary: 'List Agenda Dokumentasi'
            description: ''
            parameters:
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: quod
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: quod
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 2
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 2
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 17
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, agenda_id: null, file: null, judul: null, start_date: null, lokasi: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, agenda_id: null, file: null, judul: null, start_date: null, lokasi: null }], items: { type: object } }
            tags:
                - Agenda
            security: []
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: integer
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: 20
    '/admin/agenda/dokumentasi/{id}/delete':
        get:
            summary: 'Delete Agenda Dokumentasi'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Agenda
            security: []
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: integer
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: 16
    /auth/login:
        post:
            summary: "Login\nuntuk login user"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'user berhasil login'
                                    data: { token: token, user: user }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'user berhasil login' }
                                    data: { type: object, example: { token: token, user: user } }
            tags:
                - Auth
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    description: required.
                                    example: admin
                                password:
                                    type: string
                                    description: required.
                                    example: bmmrhdb2021!
            security: []
    /auth/logout:
        post:
            summary: "Logout\nuntuk logout user"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'logout berhasil'
                                    data: []
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'logout berhasil' }
                                    data: { type: array, example: [] }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                token:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - token
            security: []
    /auth/password/reset-request:
        post:
            summary: "Send Email Reset Password\nuntuk kirim email reset password ke email user"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: required
                                    description: ''
                                    example: voluptas
    /auth/password/reset:
        post:
            summary: "Reset Password\nuntuk reset password"
            description: ''
            parameters:
                -
                    in: query
                    name: token
                    description: ''
                    example: maxime
                    required: true
                    schema:
                        type: string
                        description: ''
                        example: maxime
                -
                    in: query
                    name: email
                    description: ''
                    example: necessitatibus
                    required: true
                    schema:
                        type: string
                        description: ''
                        example: necessitatibus
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
    '/auth/verifikasi/{id}':
        get:
            summary: "Verifikasi\nuntuk verifikasi user"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: 'true'
                                properties:
                                    status: { type: string, example: 'true' }
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: nemo
                required: true
                schema:
                    type: string
    /auth/fcm:
        post:
            summary: 'Token FCM'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                token:
                                    type: string
                                    description: ''
                                    example: qui
                            required:
                                - token
    /general/resend-verifikasi:
        post:
            summary: 'resend verifikasi'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: ''
                                    example: ullam
            security: []
    /general/password/reset-request:
        post:
            summary: "Send Email Reset Password\nuntuk kirim email reset password ke email user"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: required
                                    description: ''
                                    example: ipsa
    /general/password/reset:
        post:
            summary: "Reset Password\nuntuk reset password"
            description: ''
            parameters:
                -
                    in: query
                    name: token
                    description: ''
                    example: voluptatem
                    required: true
                    schema:
                        type: string
                        description: ''
                        example: voluptatem
                -
                    in: query
                    name: email
                    description: ''
                    example: in
                    required: true
                    schema:
                        type: string
                        description: ''
                        example: in
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
    /admin/bidang/create:
        post:
            summary: "Create Bidang\nuntuk create bidang"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 4, nama: 'Psikologi Test' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 4, nama: 'Psikologi Test' } }
            tags:
                - Bidang
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: unique
                                    example: deleniti
                            required:
                                - nama
    '/admin/bidang/{id}/update':
        post:
            summary: "Update Bidang\nuntuk update bidang"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Bidang berhasil diupdate'
                                    data: { id: 4, nama: Psokolo }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Bidang berhasil diupdate' }
                                    data: { type: object, example: { id: 4, nama: Psokolo } }
            tags:
                - Bidang
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: fuga
                            required:
                                - nama
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 5
                required: true
                schema:
                    type: integer
    '/admin/bidang/{id}/delete':
        post:
            summary: "Delete Bidang\nuntuk delete bidang"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Bidang berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Bidang berhasil dihapus' }
            tags:
                - Bidang
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 10
                required: true
                schema:
                    type: integer
    '/admin/bidang/{id}/view':
        post:
            summary: "View Bidang\nuntuk view bidang"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Psikologi Klinis' }, { id: 2, nama: 'Psikologi Industri' }, { id: 3, nama: 'Psikologi Pendidikan' }]
                                    links: { first: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-bidang', per_page: 30, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Psikologi Klinis' }, { id: 2, nama: 'Psikologi Industri' }, { id: 3, nama: 'Psikologi Pendidikan' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-bidang', per_page: 30, to: 3, total: 3 } }
            tags:
                - Bidang
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 6
                required: true
                schema:
                    type: integer
    '/user/comment/{id}/view/{model}':
        get:
            summary: "View Comment\nuntuk view comment"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[comment]'
                    description: 'select kolom ''user_id'',''content'',''commentable_type'',''commentable_id'''
                    example: tempore
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''user_id'',''content'',''commentable_type'',''commentable_id'''
                        example: tempore
                -
                    in: query
                    name: 'filter[user_id]'
                    description: 'Filter by nama ''user_id'',''content'',''commentable_type'',''commentable_id'''
                    example: sint
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama ''user_id'',''content'',''commentable_type'',''commentable_id'''
                        example: sint
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: expedita
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: expedita
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 2
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 2
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 18
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: libero
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: libero
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Comment
        parameters:
            -
                in: path
                name: id
                description: 'id model'
                example: 19
                required: true
                schema:
                    type: integer
            -
                in: path
                name: model
                description: 'nama model ex:''Feed'',''Artikel'''
                example: ut
                required: true
                schema:
                    type: string
    '/user/comment/create/{model}':
        post:
            summary: "Create Comment\nuntuk create comment"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil membuat komentar'
                                    data: { user_id: 3, content: halo, commentable_type: App\Models\Feed, commentable_id: 1, updated_at: '2021-02-27T02:38:11.000000Z', created_at: '2021-02-27T02:38:11.000000Z', id: 1 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil membuat komentar' }
                                    data: { type: object, example: { user_id: 3, content: halo, commentable_type: App\Models\Feed, commentable_id: 1, updated_at: '2021-02-27T02:38:11.000000Z', created_at: '2021-02-27T02:38:11.000000Z', id: 1 } }
            tags:
                - Comment
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: ''
                                    example: asperiores
                                commentable_id:
                                    type: integer
                                    description: ''
                                    example: 8
                            required:
                                - content
                                - commentable_id
        parameters:
            -
                in: path
                name: model
                description: 'jenis model: ''Feed'',''Artikel'''
                example: porro
                required: true
                schema:
                    type: string
    '/user/comment/{id}/update':
        post:
            summary: "Update Comment\nuntuk update comment"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Komentar berhasil diupdate'
                                    data: { id: 1, user_id: 3, content: yyykk, commentable_type: App\Models\Feed, commentable_id: 1, created_at: '2021-02-27T02:38:11.000000Z', updated_at: '2021-02-27T02:47:12.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Komentar berhasil diupdate' }
                                    data: { type: object, example: { id: 1, user_id: 3, content: yyykk, commentable_type: App\Models\Feed, commentable_id: 1, created_at: '2021-02-27T02:38:11.000000Z', updated_at: '2021-02-27T02:47:12.000000Z' } }
            tags:
                - Comment
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: optional
                                    example: dolorem
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 14
                required: true
                schema:
                    type: integer
    '/user/comment/{id}/delete':
        post:
            summary: "Delete Comment\nuntuk menghapus komentar"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Comment berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Comment berhasil dihapus' }
            tags:
                - Comment
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 18
                required: true
                schema:
                    type: integer
    '/user/forum/comment/{id}/view':
        get:
            summary: "View Comment Forum\nuntuk view comment forum"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[comment_forum]'
                    description: 'select kolom ''user_id'',''content'',''forum_id'''
                    example: est
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''user_id'',''content'',''forum_id'''
                        example: est
                -
                    in: query
                    name: 'filter[user_id]'
                    description: 'Filter by nama ''user_id'',''content'', ''forum_id'''
                    example: aspernatur
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama ''user_id'',''content'', ''forum_id'''
                        example: aspernatur
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: architecto
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: architecto
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 1
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 15
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 15
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: ut
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - 'Comment Forum'
        parameters:
            -
                in: path
                name: id
                description: 'id forum'
                example: 18
                required: true
                schema:
                    type: integer
    '/user/forum/comment/{id}/create':
        post:
            summary: "Create Comment Forum\nuntuk create comment forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil membuat komentar'
                                    data: { user_id: 3, content: halo, commentable_type: App\Models\Feed, commentable_id: 1, updated_at: '2021-02-27T02:38:11.000000Z', created_at: '2021-02-27T02:38:11.000000Z', id: 1 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil membuat komentar' }
                                    data: { type: object, example: { user_id: 3, content: halo, commentable_type: App\Models\Feed, commentable_id: 1, updated_at: '2021-02-27T02:38:11.000000Z', created_at: '2021-02-27T02:38:11.000000Z', id: 1 } }
            tags:
                - 'Comment Forum'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: ''
                                    example: maiores
                            required:
                                - content
        parameters:
            -
                in: path
                name: id
                description: ''
                example: eum
                required: true
                schema:
                    type: string
    '/user/forum/comment/{id}/update':
        post:
            summary: "Update Comment Forum\nuntuk update comment forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Komentar berhasil diupdate'
                                    data: { id: 1, user_id: 3, content: yyykk, commentable_type: App\Models\Feed, commentable_id: 1, created_at: '2021-02-27T02:38:11.000000Z', updated_at: '2021-02-27T02:47:12.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Komentar berhasil diupdate' }
                                    data: { type: object, example: { id: 1, user_id: 3, content: yyykk, commentable_type: App\Models\Feed, commentable_id: 1, created_at: '2021-02-27T02:38:11.000000Z', updated_at: '2021-02-27T02:47:12.000000Z' } }
            tags:
                - 'Comment Forum'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: optional
                                    example: ut
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 12
                required: true
                schema:
                    type: integer
    '/user/forum/comment/{id}/delete':
        post:
            summary: "Delete Comment Forum\nuntuk menghapus komentar forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Comment berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Comment berhasil dihapus' }
            tags:
                - 'Comment Forum'
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 13
                required: true
                schema:
                    type: integer
    /user/cv:
        get:
            summary: 'generate cv'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Internal Server Error</title>\r\n    <style>\r\n    .container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .content {\r\n        height: 100vh;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"content\">\r\n            <img src=\"http://localhost/handler/pageNotFound.jpg\" width=\"300px\"> \r\n            <h1 style=\"margin-left:50px;\"><b>Internal Server Error</b></h1>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>"
            tags:
                - Cv
    /user/cv-delete:
        get:
            summary: 'delete Cv'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Cv
    /admin/export-user:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Extra
            security: []
    /general/export-user:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null)'
                                    exception: Illuminate\Database\QueryException
                                    file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php'
                                    line: 671
                                    trace: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Exports\UserExport.php', line: 15, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Sheet.php', line: 458, function: collection, class: App\Exports\UserExport, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Sheet.php', line: 219, function: fromCollection, class: Maatwebsite\Excel\Sheet, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Writer.php', line: 67, function: export, class: Maatwebsite\Excel\Sheet, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Excel.php', line: 195, function: export, class: Maatwebsite\Excel\Writer, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Excel.php', line: 84, function: export, class: Maatwebsite\Excel\Excel, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Support\Facades\Facade.php', line: 261, function: download, class: Maatwebsite\Excel\Excel, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\ExportController.php', line: 13, function: __callStatic, class: Illuminate\Support\Facades\Facade, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: exportUser, class: App\Http\Controllers\ExportController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null)' }
                                    exception: { type: string, example: Illuminate\Database\QueryException }
                                    file: { type: string, example: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php' }
                                    line: { type: integer, example: 671 }
                                    trace: { type: array, example: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Exports\UserExport.php', line: 15, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Sheet.php', line: 458, function: collection, class: App\Exports\UserExport, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Sheet.php', line: 219, function: fromCollection, class: Maatwebsite\Excel\Sheet, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Writer.php', line: 67, function: export, class: Maatwebsite\Excel\Sheet, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Excel.php', line: 195, function: export, class: Maatwebsite\Excel\Writer, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\maatwebsite\excel\src\Excel.php', line: 84, function: export, class: Maatwebsite\Excel\Excel, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Support\Facades\Facade.php', line: 261, function: download, class: Maatwebsite\Excel\Excel, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\ExportController.php', line: 13, function: __callStatic, class: Illuminate\Support\Facades\Facade, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: exportUser, class: App\Http\Controllers\ExportController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Extra
            security: []
    /logs:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    logs: [{ context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#26 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#30 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#29 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#33 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select * from `...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#29 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#33 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#21 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#25 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select count(*)...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select count(*)...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select count(*)...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select count(*)...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select count(*)...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#27 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#31 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select `usernam...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select `usernam...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#30 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#34 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#64 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select `usernam...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select `usernam...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select `usernam...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#30 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#34 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#64 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:54', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#21 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#25 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select * from `...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:52', text: 'Trying to get property ''id'' of non-object {"exception":"[object] (ErrorException(code: 0): Trying to get property ''id'' of non-object at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\app\\Http\\Controllers\\CvController.php:27)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\CvController.php(27): Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(8, 'Trying to get p...', 'D:\\\\\\\\SEMESTER 6\\\\\\\\P...', 27, Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\CvController->generateCv()\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\CvController), 'generateCv', Array)\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#12 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#16 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#46 {main}\n\"} \n" }]
                                    folders: []
                                    current_folder: null
                                    folder_files: []
                                    files: [lumen-2021-08-21.log]
                                    current_file: lumen-2021-08-21.log
                                    standardFormat: true
                                properties:
                                    logs: { type: array, example: [{ context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#26 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#30 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#29 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#33 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select * from `...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Concerns\\\\BuildsQueries.php(143): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get(Array)\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(354): Illuminate\\\\Database\\\\Eloquent\\\\Builder->first(Array)\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Traits\\\\ForwardsCalls.php(23): Illuminate\\\\Database\\\\Eloquent\\\\Builder->find('est')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1736): Illuminate\\\\Database\\\\Eloquent\\\\Model->forwardCallTo(Object(Illuminate\\\\Database\\\\Eloquent\\\\Builder), 'find', Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Model.php(1748): Illuminate\\\\Database\\\\Eloquent\\\\Model->__call('find', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(56): Illuminate\\\\Database\\\\Eloquent\\\\Model::__callStatic('find', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->deleteFeedback('est')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'deleteFeedback', Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#29 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#33 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#21 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#25 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select count(*)...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select count(*)...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.feedback' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select count(*)...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select count(*)...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select count(*)...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select count(*)...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select count(*)...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select count(*)...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2369): Illuminate\\\\Database\\\\Query\\\\Builder->get()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2328): Illuminate\\\\Database\\\\Query\\\\Builder->runPaginationCountQuery(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(731): Illuminate\\\\Database\\\\Query\\\\Builder->getCountForPagination()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\FeedbackController.php(29): Illuminate\\\\Database\\\\Eloquent\\\\Builder->paginate()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\FeedbackController->listFeedback()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\FeedbackController), 'listFeedback', Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:55', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select `username`, `nama_lengkap`, `email` from `users` where `role_id` = 3 and `last_login` is not null or `photo_profile` is not null) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#27 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#31 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select `usernam...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select `usernam...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#30 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#34 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#64 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select `usernam...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select `usernam...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select `usernam...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select `usernam...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select `usernam...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select `usernam...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Exports\\\\UserExport.php(15): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(458): App\\\\Exports\\\\UserExport->collection()\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Sheet.php(219): Maatwebsite\\\\Excel\\\\Sheet->fromCollection(Object(App\\\\Exports\\\\UserExport))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Writer.php(67): Maatwebsite\\\\Excel\\\\Sheet->export(Object(App\\\\Exports\\\\UserExport))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(195): Maatwebsite\\\\Excel\\\\Writer->export(Object(App\\\\Exports\\\\UserExport), 'Xlsx')\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\maatwebsite\\\\excel\\\\src\\\\Excel.php(84): Maatwebsite\\\\Excel\\\\Excel->export(Object(App\\\\Exports\\\\UserExport), 'user.xlsx', 'Xlsx')\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Support\\\\Facades\\\\Facade.php(261): Maatwebsite\\\\Excel\\\\Excel->download(Object(App\\\\Exports\\\\UserExport), 'user.xlsx')\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\ExportController.php(13): Illuminate\\\\Support\\\\Facades\\\\Facade::__callStatic('download', Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\ExportController->exportUser()\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\ExportController), 'exportUser', Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#30 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#34 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#58 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#59 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#60 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#61 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#62 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#63 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#64 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:54', text: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16) {"exception":"[object] (Illuminate\\Database\\QueryException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16) at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:671)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#21 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#25 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 {main}\n\n[previous exception] [object] (Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception.php:18)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(83): Doctrine\\\\DBAL\\\\Driver\\\\PDO\\\\Exception::new(Object(PDOException))\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'pampsi_db.users' doesn't exist at D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php:78)\n[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\doctrine\\\\dbal\\\\lib\\\\Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection.php(78): PDO->prepare('select * from `...', Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(331): Doctrine\\\\DBAL\\\\Driver\\\\PDOConnection->prepare('select * from `...')\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(664): Illuminate\\\\Database\\\\Connection->Illuminate\\\\Database\\\\{closure}('select * from `...', Array)\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(631): Illuminate\\\\Database\\\\Connection->runQueryCallback('select * from `...', Array, Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Connection.php(339): Illuminate\\\\Database\\\\Connection->run('select * from `...', Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2270): Illuminate\\\\Database\\\\Connection->select('select * from `...', Array, true)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2258): Illuminate\\\\Database\\\\Query\\\\Builder->runSelect()\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2753): Illuminate\\\\Database\\\\Query\\\\Builder->Illuminate\\\\Database\\\\Query\\\\{closure}()\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Query\\\\Builder.php(2259): Illuminate\\\\Database\\\\Query\\\\Builder->onceWithColumns(Array, Object(Closure))\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(548): Illuminate\\\\Database\\\\Query\\\\Builder->get(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Database\\\\Eloquent\\\\Builder.php(532): Illuminate\\\\Database\\\\Eloquent\\\\Builder->getModels(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\PsikologController.php(434): Illuminate\\\\Database\\\\Eloquent\\\\Builder->get()\n#12 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\PsikologController->generalViewPsikolog('16')\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#16 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\PsikologController), 'generalViewPsik...', Array)\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(234): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(170): Laravel\\\\Lumen\\\\Application->handleDispatcherResponse(Array)\n#24 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#28 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#46 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#47 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#48 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#49 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#50 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#51 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#52 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#53 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#54 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#55 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#56 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#57 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#58 {main}\n\"} \n" }, { context: local, level: error, folder: null, level_class: danger, level_img: exclamation-triangle, date: '2021-08-21 15:42:52', text: 'Trying to get property ''id'' of non-object {"exception":"[object] (ErrorException(code: 0): Trying to get property ''id'' of non-object at D:\\SEMESTER 6\\Proyek Akhir\\Backend PAMPsi\\pam-backend\\app\\Http\\Controllers\\CvController.php:27)', in_file: null, stack: "[stacktrace]\n#0 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\app\\\\Http\\\\Controllers\\\\CvController.php(27): Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(8, 'Trying to get p...', 'D:\\\\\\\\SEMESTER 6\\\\\\\\P...', 27, Array)\n#1 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): App\\\\Http\\\\Controllers\\\\CvController->generateCv()\n#2 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#3 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#4 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#5 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#6 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(386): Illuminate\\\\Container\\\\Container->call(Array, Array)\n#7 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(352): Laravel\\\\Lumen\\\\Application->callControllerCallable(Array, Array)\n#8 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(326): Laravel\\\\Lumen\\\\Application->callLumenController(Object(App\\\\Http\\\\Controllers\\\\CvController), 'generateCv', Array)\n#9 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(279): Laravel\\\\Lumen\\\\Application->callControllerAction(Array)\n#10 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(264): Laravel\\\\Lumen\\\\Application->callActionOnArrayBasedRoute(Array)\n#11 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(166): Laravel\\\\Lumen\\\\Application->handleFoundRoute(Array)\n#12 [internal function]: Laravel\\\\Lumen\\\\Application->Laravel\\\\Lumen\\\\Concerns\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#13 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(48): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#14 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\fruitcake\\\\laravel-cors\\\\src\\\\HandleCors.php(57): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#15 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(167): Fruitcake\\\\Cors\\\\HandleCors->handle(Object(Illuminate\\\\Http\\\\Request), Object(Closure))\n#16 [internal function]: Illuminate\\\\Pipeline\\\\Pipeline->Illuminate\\\\Pipeline\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#17 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Routing\\\\Pipeline.php(30): call_user_func(Object(Closure), Object(Illuminate\\\\Http\\\\Request))\n#18 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Pipeline\\\\Pipeline.php(103): Laravel\\\\Lumen\\\\Routing\\\\Pipeline->Laravel\\\\Lumen\\\\Routing\\\\{closure}(Object(Illuminate\\\\Http\\\\Request))\n#19 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(423): Illuminate\\\\Pipeline\\\\Pipeline->then(Object(Closure))\n#20 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(172): Laravel\\\\Lumen\\\\Application->sendThroughPipeline(Array, Object(Closure))\n#21 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Concerns\\\\RoutesRequests.php(92): Laravel\\\\Lumen\\\\Application->dispatch(Object(Illuminate\\\\Http\\\\Request))\n#22 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(333): Laravel\\\\Lumen\\\\Application->handle(Object(Illuminate\\\\Http\\\\Request))\n#23 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(305): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->callLaravelOrLumenRoute(Object(Illuminate\\\\Http\\\\Request))\n#24 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(76): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeApiCall(Object(Illuminate\\\\Http\\\\Request), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter))\n#25 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(51): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCall(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#26 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls.php(41): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->makeResponseCallIfEnabledAndNoSuccessResponses(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#27 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(236): Knuckles\\\\Scribe\\\\Extracting\\\\Strategies\\\\Responses\\\\ResponseCalls->__invoke(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Object(ReflectionClass), Object(ReflectionMethod), Array, Array)\n#28 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(172): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->iterateThroughStrategies('responses', Array, Array)\n#29 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Extracting\\\\Generator.php(127): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->fetchResponses(Object(ReflectionClass), Object(ReflectionMethod), Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array, Array)\n#30 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(119): Knuckles\\\\Scribe\\\\Extracting\\\\Generator->processRoute(Object(Knuckles\\\\Scribe\\\\Matching\\\\LumenRouteAdapter), Array)\n#31 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\knuckleswtf\\\\scribe\\\\src\\\\Commands\\\\GenerateDocumentation.php(73): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->processRoutes(Array)\n#32 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(36): Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation->handle(Object(Knuckles\\\\Scribe\\\\Matching\\\\RouteMatcher))\n#33 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Util.php(37): Illuminate\\\\Container\\\\BoundMethod::Illuminate\\\\Container\\\\{closure}()\n#34 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(93): Illuminate\\\\Container\\\\Util::unwrapIfClosure(Object(Closure))\n#35 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\BoundMethod.php(37): Illuminate\\\\Container\\\\BoundMethod::callBoundMethod(Object(Laravel\\\\Lumen\\\\Application), Array, Object(Closure))\n#36 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Container\\\\Container.php(596): Illuminate\\\\Container\\\\BoundMethod::call(Object(Laravel\\\\Lumen\\\\Application), Array, Array, NULL)\n#37 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(134): Illuminate\\\\Container\\\\Container->call(Array)\n#38 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Command\\\\Command.php(256): Illuminate\\\\Console\\\\Command->execute(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#39 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Command.php(121): Symfony\\\\Component\\\\Console\\\\Command\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Illuminate\\\\Console\\\\OutputStyle))\n#40 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(971): Illuminate\\\\Console\\\\Command->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#41 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(290): Symfony\\\\Component\\\\Console\\\\Application->doRunCommand(Object(Knuckles\\\\Scribe\\\\Commands\\\\GenerateDocumentation), Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#42 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\symfony\\\\console\\\\Application.php(166): Symfony\\\\Component\\\\Console\\\\Application->doRun(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#43 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Console\\\\Application.php(93): Symfony\\\\Component\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#44 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\vendor\\\\laravel\\\\lumen-framework\\\\src\\\\Console\\\\Kernel.php(116): Illuminate\\\\Console\\\\Application->run(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#45 D:\\\\SEMESTER 6\\\\Proyek Akhir\\\\Backend PAMPsi\\\\pam-backend\\\\artisan(35): Laravel\\\\Lumen\\\\Console\\\\Kernel->handle(Object(Symfony\\\\Component\\\\Console\\\\Input\\\\ArgvInput), Object(Symfony\\\\Component\\\\Console\\\\Output\\\\ConsoleOutput))\n#46 {main}\n\"} \n" }], items: { type: object } }
                                    folders: { type: array, example: [] }
                                    current_folder: { type: string, example: null }
                                    folder_files: { type: array, example: [] }
                                    files: { type: array, example: [lumen-2021-08-21.log], items: { type: string } }
                                    current_file: { type: string, example: lumen-2021-08-21.log }
                                    standardFormat: { type: boolean, example: true }
            tags:
                - Extra
            security: []
    /faq:
        get:
            summary: "List FAQ\nuntuk list FAQ dengan pagination"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, pertanyaan: 1, jawaban: 2, created_by: 1, updated_by: 1 }, { id: 2, pertanyaan: 2, jawaban: 3, created_by: 1, updated_by: null }]
                                    links: { first: 'http://localhost:8000/faq?page=1', last: 'http://localhost:8000/faq?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/faq', per_page: 15, to: 2, total: 2 }
                                properties:
                                    data: { type: array, example: [{ id: 1, pertanyaan: 1, jawaban: 2, created_by: 1, updated_by: 1 }, { id: 2, pertanyaan: 2, jawaban: 3, created_by: 1, updated_by: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/faq?page=1', last: 'http://localhost:8000/faq?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/faq', per_page: 15, to: 2, total: 2 } }
            tags:
                - FAQ
            security: []
    /faq/create:
        post:
            summary: "create FAQ\nuntuk create FAQ"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n  \"status\": \"success\",\n  \"message\": \"data berhasil disimpan!\",\n  \"data\": {\n       \"id\": null,\n       \"pertanyaan\": \"1\",\n       \"jawaban\": \"1\"\n    }\n  }\n}"
            tags:
                - FAQ
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                pertanyaan:
                                    type: integer
                                    description: ''
                                    example: 6
                                jawaban:
                                    type: integer
                                    description: ''
                                    example: 13
                            required:
                                - pertanyaan
                                - jawaban
    '/faq/{id}/update':
        post:
            summary: "update FAQ\nuntuk update FAQ"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n       \"status\": \"success\",\n      \"message\": \"Kota berhasil diupdate\",\n      \"data\": {\n          \"id\": 1,\n          \"pertanyaan\": 1,\n          \"jawaban\": \"2\"\n      }\n  }\n}"
            tags:
                - FAQ
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                pertanyaan:
                                    type: integer
                                    description: ''
                                    example: 8
                                jawaban:
                                    type: integer
                                    description: ''
                                    example: 5
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 19
                required: true
                schema:
                    type: integer
    '/faq/{id}/delete':
        post:
            summary: "Delete FAQ\nuntuk delete FAQ"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - FAQ
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 12
                required: true
                schema:
                    type: integer
    /general/feedback:
        get:
            summary: 'list feedback'
            description: ''
            parameters:
                -
                    in: query
                    name: page
                    description: ''
                    example: voluptatibus
                    required: false
                    schema:
                        type: string
                        description: ''
                        example: voluptatibus
                -
                    in: query
                    name: per_page
                    description: ''
                    example: voluptatem
                    required: false
                    schema:
                        type: string
                        description: ''
                        example: voluptatem
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`)'
                                    exception: Illuminate\Database\QueryException
                                    file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php'
                                    line: 671
                                    trace: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2369, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2328, function: runPaginationCountQuery, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 731, function: getCountForPagination, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\FeedbackController.php', line: 29, function: paginate, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: listFeedback, class: App\Http\Controllers\FeedbackController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select count(*) as aggregate from `feedback`)' }
                                    exception: { type: string, example: Illuminate\Database\QueryException }
                                    file: { type: string, example: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php' }
                                    line: { type: integer, example: 671 }
                                    trace: { type: array, example: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2369, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2328, function: runPaginationCountQuery, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 731, function: getCountForPagination, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\FeedbackController.php', line: 29, function: paginate, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: listFeedback, class: App\Http\Controllers\FeedbackController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Feedback
            security: []
    '/general/feedback/{id}/delete':
        get:
            summary: 'delete feedback'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1)'
                                    exception: Illuminate\Database\QueryException
                                    file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php'
                                    line: 671
                                    trace: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Concerns\BuildsQueries.php', line: 143, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 354, function: first, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Support\Traits\ForwardsCalls.php', line: 23, function: find, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php', line: 1736, function: forwardCallTo, class: Illuminate\Database\Eloquent\Model, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php', line: 1748, function: __call, class: Illuminate\Database\Eloquent\Model, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\FeedbackController.php', line: 56, function: __callStatic, class: Illuminate\Database\Eloquent\Model, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: deleteFeedback, class: App\Http\Controllers\FeedbackController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 234, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 170, function: handleDispatcherResponse, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.feedback'' doesn''t exist (SQL: select * from `feedback` where `feedback`.`id` = est limit 1)' }
                                    exception: { type: string, example: Illuminate\Database\QueryException }
                                    file: { type: string, example: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php' }
                                    line: { type: integer, example: 671 }
                                    trace: { type: array, example: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Concerns\BuildsQueries.php', line: 143, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 354, function: first, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Support\Traits\ForwardsCalls.php', line: 23, function: find, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php', line: 1736, function: forwardCallTo, class: Illuminate\Database\Eloquent\Model, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.php', line: 1748, function: __call, class: Illuminate\Database\Eloquent\Model, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\FeedbackController.php', line: 56, function: __callStatic, class: Illuminate\Database\Eloquent\Model, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: deleteFeedback, class: App\Http\Controllers\FeedbackController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 234, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 170, function: handleDispatcherResponse, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - Feedback
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /user/feeds-list:
        get:
            summary: "List Feed\nuntuk list Feed"
            description: ''
            parameters:
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: quis
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: quis
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 10
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 10
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 14
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 14
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser,comments,likers).'
                    example: dolorem
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser,comments,likers).'
                        example: dolorem
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Feeds
    /user/feeds:
        get:
            summary: "MyFeeds\nuntuk melihat feed saya"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[feeds]'
                    description: 'select kolom ''id'',''user_id'',''content'',''created_at'',''updated_at'''
                    example: velit
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''id'',''user_id'',''content'',''created_at'',''updated_at'''
                        example: velit
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, user_id: 1, content: Halo, created_at: '2021-02-16T20:05:59.000000Z', updated_at: '2021-02-16T20:06:01.000000Z' }]
                                properties:
                                    data: { type: array, example: [{ id: 1, user_id: 1, content: Halo, created_at: '2021-02-16T20:05:59.000000Z', updated_at: '2021-02-16T20:06:01.000000Z' }], items: { type: object } }
            tags:
                - Feeds
    '/user/feeds/{id}/view':
        get:
            summary: 'view Feeds'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Feeds
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 13
                required: true
                schema:
                    type: integer
    /user/feeds/create:
        post:
            summary: "Create Feed\nuntuk membuat feed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 3, user_id: 1, content: 'ini create feed', created_at: '2021-02-17T03:27:12.000000Z', updated_at: '2021-02-17T03:27:12.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 3, user_id: 1, content: 'ini create feed', created_at: '2021-02-17T03:27:12.000000Z', updated_at: '2021-02-17T03:27:12.000000Z' } }
            tags:
                - Feeds
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: ''
                                    example: consequuntur
                            required:
                                - content
    '/user/feeds/{id}/update':
        post:
            summary: "Update Feed\nuntuk update feed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Feed berhasil diupdate'
                                    data: { id: 1, user_id: 1, content: Halo, created_at: '2021-02-16T20:05:59.000000Z', updated_at: '2021-02-16T20:06:01.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Feed berhasil diupdate' }
                                    data: { type: object, example: { id: 1, user_id: 1, content: Halo, created_at: '2021-02-16T20:05:59.000000Z', updated_at: '2021-02-16T20:06:01.000000Z' } }
            tags:
                - Feeds
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    description: ''
                                    example: omnis
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 6
                required: true
                schema:
                    type: integer
    '/user/feeds/{id}/delete':
        post:
            summary: "Delete Feed\nuntuk delete feed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Feed berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Feed berhasil dihapus' }
            tags:
                - Feeds
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 2
                required: true
                schema:
                    type: integer
    '/user/feeds/{id}/like':
        post:
            summary: "Like Feed\nuntuk like feed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil like feed'
                                    data: { id: 8, likes: 2, likeable_type: App\Models\Feed, likeable_id: 2, created_at: '2021-02-22T03:38:31.000000Z', updated_at: '2021-02-22T03:38:31.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil like feed' }
                                    data: { type: object, example: { id: 8, likes: 2, likeable_type: App\Models\Feed, likeable_id: 2, created_at: '2021-02-22T03:38:31.000000Z', updated_at: '2021-02-22T03:38:31.000000Z' } }
            tags:
                - Feeds
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 4
                required: true
                schema:
                    type: integer
    '/user/feeds/{id}/unlike':
        post:
            summary: "Unlike Feed\nuntuk unlike feed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil unlike feed'
                                    data: true
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil unlike feed' }
                                    data: { type: boolean, example: true }
            tags:
                - Feeds
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 19
                required: true
                schema:
                    type: integer
    /user/forum-kategori:
        get:
            summary: "List Kategori Forum\nuntuk list kategori forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
    /user/forum-kategori/create:
        post:
            summary: "Create Kategori Forum\nuntuk create kategori forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: sed
                            required:
                                - nama
    '/user/forum-kategori/{nama}/update':
        post:
            summary: "Update Kategori Forum\nuntuk update kategori forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: qui
                            required:
                                - nama
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: architecto
                required: true
                schema:
                    type: string
    '/user/forum-kategori/{nama}/delete':
        post:
            summary: "Delete Kategori Forum\nuntuk hapus kategori forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: dolor
                required: true
                schema:
                    type: string
    /user/forum:
        get:
            summary: "List Forum\nuntuk list forum"
            description: ''
            parameters:
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: enim
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: enim
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 18
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 14
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 14
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataComment,dataUser,likers).'
                    example: repudiandae
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataComment,dataUser,likers).'
                        example: repudiandae
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, alasan: null, status: null, created_at: null, updated_at: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, alasan: null, status: null, created_at: null, updated_at: null }], items: { type: object } }
            tags:
                - Forum
    '/user/forum/{id}/view':
        get:
            summary: "View Forum\nuntuk view forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, alasan: null, status: null, created_at: null, updated_at: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, alasan: null, status: null, created_at: null, updated_at: null }], items: { type: object } }
            tags:
                - Forum
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 5
                required: true
                schema:
                    type: integer
    /user/forum/create:
        post:
            summary: "Create Forum\nuntuk create forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 1, kategori_id: null, judul: rerum, isi: enim, image: 1614671545.png, user_id: 1, views: null, created_at: '2021-03-02T07:52:25.000000Z', updated_at: '2021-03-02T07:52:25.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 1, kategori_id: null, judul: rerum, isi: enim, image: 1614671545.png, user_id: 1, views: null, created_at: '2021-03-02T07:52:25.000000Z', updated_at: '2021-03-02T07:52:25.000000Z' } }
            tags:
                - Forum
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: alias
                                judul:
                                    type: string
                                    description: ''
                                    example: placeat
                                isi:
                                    type: text
                                    description: ''
                                    example: perspiciatis
                                objImage:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - nama_kategori
                                - judul
                                - isi
    '/user/forum/{id}/update':
        post:
            summary: "Update Forum\nuntuk update forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Forum berhasil diupdate'
                                    data: { id: 15, kategori_id: '2', judul: judul13, isi: isi123, image: 1614141329.jpg, user_id: 1, views: 0, created_at: '2021-02-24T04:18:26.000000Z', updated_at: '2021-02-24T04:35:29.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Forum berhasil diupdate' }
                                    data: { type: object, example: { id: 15, kategori_id: '2', judul: judul13, isi: isi123, image: 1614141329.jpg, user_id: 1, views: 0, created_at: '2021-02-24T04:18:26.000000Z', updated_at: '2021-02-24T04:35:29.000000Z' } }
            tags:
                - Forum
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: optional
                                    example: doloremque
                                judul:
                                    type: string
                                    description: optional
                                    example: dicta
                                isi:
                                    type: string
                                    description: optional
                                    example: in
                                image:
                                    type: string
                                    format: binary
                                    description: optional
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 10
                required: true
                schema:
                    type: integer
    '/user/forum/{id}/delete':
        post:
            summary: "Delete Forum\nuntuk delete forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Forum berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Forum berhasil dihapus' }
            tags:
                - Forum
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 17
                required: true
                schema:
                    type: integer
    '/user/forum/{id}/like':
        post:
            summary: "Like Forum\nuntuk like forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 4
                required: true
                schema:
                    type: integer
    '/user/forum/{id}/unlike':
        post:
            summary: "Unlike Forum\nuntuk unlike forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 10
                required: true
                schema:
                    type: integer
    '/moderator/forum/{id}/status':
        post:
            summary: "Status Forum\nuntuk update status forum open/closed"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Forum
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                alasan:
                                    type: string
                                    description: ''
                                    example: nemo
                            required:
                                - alasan
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: placeat
    /user/friends:
        get:
            summary: "List friends\ndata user yang sudah terkoneksi sebagai teman"
            description: ''
            parameters:
                -
                    in: query
                    name: page
                    description: 'nomor halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'nomor halaman.'
                        example: null
                -
                    in: query
                    name: per_page
                    description: 'jumlah per halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'jumlah per halaman.'
                        example: null
                -
                    in: query
                    name: cari
                    description: 'cari username.'
                    example: null
                    required: false
                    schema:
                        type: string
                        description: 'cari username.'
                        example: null
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     id: 1,\n     username: \"john\",\n     nama_lengkap: null,\n     member_id: null,\n     pivot: []\n  ]\n}"
            tags:
                - 'Friendship / connection'
    /user/blocked-friends:
        get:
            summary: "List Blocked friends\ndata user yang yang diblock oleh user login"
            description: ''
            parameters:
                -
                    in: query
                    name: page
                    description: 'nomor halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'nomor halaman.'
                        example: null
                -
                    in: query
                    name: per_page
                    description: 'jumlah per halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'jumlah per halaman.'
                        example: null
                -
                    in: query
                    name: cari
                    description: 'cari username.'
                    example: null
                    required: false
                    schema:
                        type: string
                        description: 'cari username.'
                        example: null
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     id: 1,\n     username: \"john\",\n     nama_lengkap: null,\n     member_id: null,\n     pivot: []\n  ]\n}"
            tags:
                - 'Friendship / connection'
    /user/friends-request:
        get:
            summary: "List friends request\ndata permintaan pertemanan dari user lain"
            description: ''
            parameters:
                -
                    in: query
                    name: page
                    description: 'nomor halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'nomor halaman.'
                        example: null
                -
                    in: query
                    name: per_page
                    description: 'jumlah per halaman.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'jumlah per halaman.'
                        example: null
                -
                    in: query
                    name: cari
                    description: 'cari username.'
                    example: null
                    required: false
                    schema:
                        type: string
                        description: 'cari username.'
                        example: null
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     id: 1,\n     username: \"john\",\n     nama_lengkap: null,\n     member_id: null,\n     pivot: []\n  ]\n}"
            tags:
                - 'Friendship / connection'
        post:
            summary: "Kirim friends request\nkirim permintaan pertemanan ke user lain"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"silahkan tunggu\",\n     data: []\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                target_id:
                                    type: integer
                                    description: 'id user target.'
                                    example: null
    /user/friends-request-approve:
        post:
            summary: "Approval friends request\nmenyetujui permintaan pertemanan ke user lain"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"Anda telah menyetujui permintaan pertemanan\",\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                request_id:
                                    type: integer
                                    description: 'id request.'
                                    example: null
    /user/friends-request-reject:
        post:
            summary: "Reject friends request\nmenolak permintaan pertemanan ke user lain"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"Anda telah menolak permintaan pertemanan\",\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                request_id:
                                    type: integer
                                    description: 'id request.'
                                    example: null
    /user/friend-block:
        post:
            summary: "Block user\nblock user"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"Anda telah mem-block user\",\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                target_id:
                                    type: integer
                                    description: 'id target.'
                                    example: null
    /user/friend-unblock:
        post:
            summary: "UnBlock user\nunblock user"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"Anda telah meng-unblock user\",\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                target_id:
                                    type: integer
                                    description: 'id target.'
                                    example: null
    /user/unfriend:
        post:
            summary: "Unfriend user\nunfriend user"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  [\n     status: \"success\",\n     message: \"user unfriend!\",\n  ]\n}"
            tags:
                - 'Friendship / connection'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                target_id:
                                    type: integer
                                    description: 'id target.'
                                    example: null
    '/user/histori-pendidikan/{id}/list':
        get:
            summary: "List Histori Pendidikan\nlist histori pendidikan tanpa pagging"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, idUser: 1, tingkat: S1, namaLembagaPendidikan: '', tahunLulus: 0 }]
                                properties:
                                    data: { type: array, example: [{ id: 1, idUser: 1, tingkat: S1, namaLembagaPendidikan: '', tahunLulus: 0 }], items: { type: object } }
            tags:
                - 'Histori Pendidikan'
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 9
                required: true
                schema:
                    type: integer
    /user/histori-pendidikan/create:
        post:
            summary: "create histori pendidikan\nuntuk create histori pendidikan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil tambah histori'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil tambah histori' }
                                    data: { type: string, example: data }
            tags:
                - 'Histori Pendidikan'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                tingkat:
                                    type: string
                                    description: 'enum required ''SD'',''SMP'',''SMA'',''S1'',''S2'',''S3'''
                                    example: pariatur
                                nama_lembaga_pendidikan:
                                    type: string
                                    description: ''
                                    example: inventore
                                tahun_lulus:
                                    type: integer
                                    description: ''
                                    example: 4
                            required:
                                - nama_lembaga_pendidikan
                                - tahun_lulus
    '/user/histori-pendidikan/{id}/update':
        post:
            summary: "update histori pendidikan\nuntuk create histori pendidikan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil update histori'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil update histori' }
                                    data: { type: string, example: data }
            tags:
                - 'Histori Pendidikan'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                tingkat:
                                    type: string
                                    description: 'enum required ''SD'',''SMP'',''SMA'',''S1'',''S2'',''S3'''
                                    example: omnis
                                nama_lembaga_pendidikan:
                                    type: string
                                    description: ''
                                    example: ad
                                tahun_lulus:
                                    type: integer
                                    description: ''
                                    example: 2
                            required:
                                - nama_lembaga_pendidikan
                                - tahun_lulus
        parameters:
            -
                in: path
                name: id
                description: 'id histori'
                example: culpa
                required: true
                schema:
                    type: string
    '/user/histori-pendidikan/{id}/delete':
        post:
            summary: "delete histori pendidikan\nuntuk hapus histori pendidikan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil hapus histori'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil hapus histori' }
                                    data: { type: string, example: data }
            tags:
                - 'Histori Pendidikan'
        parameters:
            -
                in: path
                name: id
                description: 'id histori'
                example: velit
                required: true
                schema:
                    type: string
    '/general/jumlah/{model}':
        get:
            summary: 'Jumlah model'
            description: ''
            parameters:
                -
                    in: query
                    name: child
                    description: ''
                    example: eos
                    required: false
                    schema:
                        type: string
                        description: ''
                        example: eos
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: string
                                example: DataNotFound
            tags:
                - Jumlah
            security: []
        parameters:
            -
                in: path
                name: model
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: maiores
    /admin/all-jurusan:
        get:
            summary: "DataProvider Jurusan\ndaftar collection jurusan dengan paging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[jurusan]'
                    description: 'select kolom ''kode'',''universitas_id'',''nama'''
                    example: dolorem
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''kode'',''universitas_id'',''nama'''
                        example: dolorem
                -
                    in: query
                    name: 'filter[universitas_id]'
                    description: 'Filter by universitas ID.'
                    example: 6
                    required: false
                    schema:
                        type: integer
                        description: 'Filter by universitas ID.'
                        example: 6
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by nama jurusan.'
                    example: omnis
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama jurusan.'
                        example: omnis
                -
                    in: query
                    name: 'filter[kode]'
                    description: 'Filter by kode jurusan.'
                    example: molestiae
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode jurusan.'
                        example: molestiae
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: est
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: est
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUniversitas).'
                    example: dolor
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUniversitas).'
                        example: dolor
                -
                    in: query
                    name: 'page[number]'
                    description: 'nomor halaman.'
                    example: 4
                    required: false
                    schema:
                        type: integer
                        description: 'nomor halaman.'
                        example: 4
                -
                    in: query
                    name: 'page[size]'
                    description: 'jumlah item per halaman.'
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: 'jumlah item per halaman.'
                        example: 19
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kode: KLI, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }, { id: 2, kode: PIO, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }]
                                    links: { first: 'http://localhost:8000/admin/all-jurusan?page=1', last: 'http://localhost:8000/admin/all-jurusan?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/all-jurusan', per_page: 15, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kode: KLI, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }, { id: 2, kode: PIO, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/admin/all-jurusan?page=1', last: 'http://localhost:8000/admin/all-jurusan?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/all-jurusan', per_page: 15, to: 3, total: 3 } }
            tags:
                - Jurusan
    '/admin/jurusan/{id}/view':
        post:
            summary: 'View Jurusan'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, universitas_id: null, nama: null, kode: null }
                                properties:
                                    data: { type: object, example: { id: null, universitas_id: null, nama: null, kode: null } }
            tags:
                - Jurusan
        parameters:
            -
                in: path
                name: id
                description: 'ID jurusan'
                example: 5
                required: true
                schema:
                    type: integer
    /admin/jurusan/create:
        post:
            summary: "Create jurusan\nuntuk create jurusan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "// respon berhasil disimpan\r\n{\r\n    \"status\": \"success\",\r\n    \"message\": \"data berhasil disimpan!\",\r\n    \"data\": {\r\n        \"id\": 5,\r\n        \"kode\": \"KLI\",\r\n        \"nama\": \"asdf\",\r\n        \"dataUniversitas\": {\r\n            \"id\": 1,\r\n            \"nama\": \"Universitas Gajah Mada\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// respon validasi error\r\n{\r\n    \"status\": \"failed\",\r\n    \"message\": \"data gagal disimpan!\",\r\n    \"data\": {\r\n        \"errors\": {\r\n            \"id\": [\r\n                \"Kode Jurusan sudah digunakan!\"\r\n            ]\r\n        }\r\n    }\r\n}"
            tags:
                - Jurusan
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                kode:
                                    type: string
                                    description: 'kode jurusan'
                                    example: eum
                                universitas_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                nama:
                                    type: string
                                    description: ''
                                    example: facere
                            required:
                                - kode
                                - universitas_id
                                - nama
    '/admin/jurusan/{id}/update':
        post:
            summary: "Update jurusan\nuntuk update jurusan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "// respon berhasil disimpan\r\n{\r\n    \"status\": \"success\",\r\n    \"message\": \"data berhasil disimpan!\",\r\n    \"data\": {\r\n        \"id\": 5,\r\n        \"kode\": \"KLI\",\r\n        \"nama\": \"asdf\",\r\n        \"dataUniversitas\": {\r\n            \"id\": 1,\r\n            \"nama\": \"Universitas Gajah Mada\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// respon validasi error\r\n{\r\n    \"status\": \"failed\",\r\n    \"message\": \"data gagal disimpan!\",\r\n    \"data\": {\r\n        \"errors\": {\r\n            \"id\": [\r\n                \"Kode Jurusan sudah digunakan!\"\r\n            ]\r\n        }\r\n    }\r\n}"
            tags:
                - Jurusan
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                kode:
                                    type: string
                                    description: ''
                                    example: blanditiis
                                universitas_id:
                                    type: integer
                                    description: ''
                                    example: 11
                                nama:
                                    type: string
                                    description: ''
                                    example: similique
                            required:
                                - kode
                                - universitas_id
                                - nama
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 1
                required: true
                schema:
                    type: integer
    '/admin/jurusan/{id}/delete':
        post:
            summary: "Delete Jurusan\nuntuk delete jurusan"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"status\":\"success\",\n\"message\":\"jurusan berhasil dihapus\",\n}"
            tags:
                - Jurusan
        parameters:
            -
                in: path
                name: id
                description: 'id jurusan'
                example: 4
                required: true
                schema:
                    type: integer
    /admin/all-kota:
        get:
            summary: "DataProvider Kota\ndaftar collection kota dengan pagging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[kota]'
                    description: 'select kolom ''provinsi_id'',''nama_kota'',''kode_kota'''
                    example: nesciunt
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''provinsi_id'',''nama_kota'',''kode_kota'''
                        example: nesciunt
                -
                    in: query
                    name: 'filter[nama_kota]'
                    description: 'Filter by nama kota.'
                    example: cupiditate
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama kota.'
                        example: cupiditate
                -
                    in: query
                    name: 'filter[kode_kota]'
                    description: 'Filter by kode kota.'
                    example: dolore
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode kota.'
                        example: dolore
                -
                    in: query
                    name: 'filter[provinsi_id]'
                    description: 'Filter by provinsi id.'
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'Filter by provinsi id.'
                        example: ut
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: similique
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: similique
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 7
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 7
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 16
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 16
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ nama_kota: 'Kab. Simeulue', kode_kota: null }, { nama_kota: 'Kab. Aceh Singkil', kode_kota: null }, { nama_kota: 'Kab. Aceh Selatan', kode_kota: null }, { nama_kota: 'Kab. Aceh Tenggara', kode_kota: null }, { nama_kota: 'Kab. Aceh Timur', kode_kota: null }, { nama_kota: 'Kab. Aceh Tengah', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat', kode_kota: null }, { nama_kota: 'Kab. Aceh Besar', kode_kota: null }, { nama_kota: 'Kab. Pidie', kode_kota: null }, { nama_kota: 'Kab. Bireuen', kode_kota: null }, { nama_kota: 'Kab. Aceh Utara', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat Daya', kode_kota: null }, { nama_kota: 'Kab. Gayo Lues', kode_kota: null }, { nama_kota: 'Kab. Aceh Tamiang', kode_kota: null }, { nama_kota: 'Kab. Nagan Raya', kode_kota: null }, { nama_kota: 'Kab. Aceh Jaya', kode_kota: null }, { nama_kota: 'Kab. Bener Meriah', kode_kota: null }, { nama_kota: 'Kab. Pidie Jaya', kode_kota: null }, { nama_kota: 'Kota Banda Aceh', kode_kota: null }, { nama_kota: 'Kota Sabang', kode_kota: null }, { nama_kota: 'Kota Langsa', kode_kota: null }, { nama_kota: 'Kota Lhokseumawe', kode_kota: null }, { nama_kota: 'Kota Subulussalam', kode_kota: null }, { nama_kota: 'Kab. Nias', kode_kota: null }, { nama_kota: 'Kab. Mandailing Natal', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Selatan', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Tengah', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Utara', kode_kota: null }, { nama_kota: 'Kab. Toba Samosir', kode_kota: null }, { nama_kota: 'Kab. Labuhan Batu', kode_kota: null }]
                                    links: { first: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=17', prev: null, next: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=2' }
                                    meta: { current_page: 1, from: 1, last_page: 17, path: 'http://localhost:8000/general/all-kota', per_page: 30, to: 30, total: 499 }
                                properties:
                                    data: { type: array, example: [{ nama_kota: 'Kab. Simeulue', kode_kota: null }, { nama_kota: 'Kab. Aceh Singkil', kode_kota: null }, { nama_kota: 'Kab. Aceh Selatan', kode_kota: null }, { nama_kota: 'Kab. Aceh Tenggara', kode_kota: null }, { nama_kota: 'Kab. Aceh Timur', kode_kota: null }, { nama_kota: 'Kab. Aceh Tengah', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat', kode_kota: null }, { nama_kota: 'Kab. Aceh Besar', kode_kota: null }, { nama_kota: 'Kab. Pidie', kode_kota: null }, { nama_kota: 'Kab. Bireuen', kode_kota: null }, { nama_kota: 'Kab. Aceh Utara', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat Daya', kode_kota: null }, { nama_kota: 'Kab. Gayo Lues', kode_kota: null }, { nama_kota: 'Kab. Aceh Tamiang', kode_kota: null }, { nama_kota: 'Kab. Nagan Raya', kode_kota: null }, { nama_kota: 'Kab. Aceh Jaya', kode_kota: null }, { nama_kota: 'Kab. Bener Meriah', kode_kota: null }, { nama_kota: 'Kab. Pidie Jaya', kode_kota: null }, { nama_kota: 'Kota Banda Aceh', kode_kota: null }, { nama_kota: 'Kota Sabang', kode_kota: null }, { nama_kota: 'Kota Langsa', kode_kota: null }, { nama_kota: 'Kota Lhokseumawe', kode_kota: null }, { nama_kota: 'Kota Subulussalam', kode_kota: null }, { nama_kota: 'Kab. Nias', kode_kota: null }, { nama_kota: 'Kab. Mandailing Natal', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Selatan', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Tengah', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Utara', kode_kota: null }, { nama_kota: 'Kab. Toba Samosir', kode_kota: null }, { nama_kota: 'Kab. Labuhan Batu', kode_kota: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=17', prev: null, next: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=2' } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 17, path: 'http://localhost:8000/general/all-kota', per_page: 30, to: 30, total: 499 } }
            tags:
                - Kota
    '/admin/kota/{id}/view':
        post:
            summary: 'View Kota'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, provinsi_id: null, nama_kota: null, kode_kota: null }
                                properties:
                                    data: { type: object, example: { id: null, provinsi_id: null, nama_kota: null, kode_kota: null } }
            tags:
                - Kota
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 6
                required: true
                schema:
                    type: integer
    '/admin/kota/provinsi/{id}':
        get:
            summary: "List Kota by Provinsi\nlist kota by provinsi dengan paging"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1101, provinsi: '11', namaKota: 'KABUPATEN SIMEULUE', kodeKota: null }, { id: 1102, provinsi: '11', namaKota: 'KABUPATEN ACEH SINGKIL', kodeKota: null }, { id: 1103, provinsi: '11', namaKota: 'KABUPATEN ACEH SELATAN', kodeKota: null }, { id: 1104, provinsi: '11', namaKota: 'KABUPATEN ACEH TENGGARA', kodeKota: null }, { id: 1105, provinsi: '11', namaKota: 'KABUPATEN ACEH TIMUR', kodeKota: null }, { id: 1106, provinsi: '11', namaKota: 'KABUPATEN ACEH TENGAH', kodeKota: null }, { id: 1107, provinsi: '11', namaKota: 'KABUPATEN ACEH BARAT', kodeKota: null }, { id: 1108, provinsi: '11', namaKota: 'KABUPATEN ACEH BESAR', kodeKota: null }, { id: 1109, provinsi: '11', namaKota: 'KABUPATEN PIDIE', kodeKota: null }, { id: 1110, provinsi: '11', namaKota: 'KABUPATEN BIREUEN', kodeKota: null }, { id: 1111, provinsi: '11', namaKota: 'KABUPATEN ACEH UTARA', kodeKota: null }, { id: 1112, provinsi: '11', namaKota: 'KABUPATEN ACEH BARAT DAYA', kodeKota: null }, { id: 1113, provinsi: '11', namaKota: 'KABUPATEN GAYO LUES', kodeKota: null }, { id: 1114, provinsi: '11', namaKota: 'KABUPATEN ACEH TAMIANG', kodeKota: null }, { id: 1115, provinsi: '11', namaKota: 'KABUPATEN NAGAN RAYA', kodeKota: null }]
                                    links: { first: 'http://localhost:8000/admin/kota/provinsi/11?page=1', last: 'http://localhost:8000/admin/kota/provinsi/11?page=2', prev: null, next: 'http://localhost:8000/admin/kota/provinsi/11?page=2' }
                                    meta: { current_page: 1, from: 1, last_page: 2, path: 'http://localhost:8000/admin/kota/provinsi/11', per_page: 15, to: 15, total: 23 }
                                properties:
                                    data: { type: array, example: [{ id: 1101, provinsi: '11', namaKota: 'KABUPATEN SIMEULUE', kodeKota: null }, { id: 1102, provinsi: '11', namaKota: 'KABUPATEN ACEH SINGKIL', kodeKota: null }, { id: 1103, provinsi: '11', namaKota: 'KABUPATEN ACEH SELATAN', kodeKota: null }, { id: 1104, provinsi: '11', namaKota: 'KABUPATEN ACEH TENGGARA', kodeKota: null }, { id: 1105, provinsi: '11', namaKota: 'KABUPATEN ACEH TIMUR', kodeKota: null }, { id: 1106, provinsi: '11', namaKota: 'KABUPATEN ACEH TENGAH', kodeKota: null }, { id: 1107, provinsi: '11', namaKota: 'KABUPATEN ACEH BARAT', kodeKota: null }, { id: 1108, provinsi: '11', namaKota: 'KABUPATEN ACEH BESAR', kodeKota: null }, { id: 1109, provinsi: '11', namaKota: 'KABUPATEN PIDIE', kodeKota: null }, { id: 1110, provinsi: '11', namaKota: 'KABUPATEN BIREUEN', kodeKota: null }, { id: 1111, provinsi: '11', namaKota: 'KABUPATEN ACEH UTARA', kodeKota: null }, { id: 1112, provinsi: '11', namaKota: 'KABUPATEN ACEH BARAT DAYA', kodeKota: null }, { id: 1113, provinsi: '11', namaKota: 'KABUPATEN GAYO LUES', kodeKota: null }, { id: 1114, provinsi: '11', namaKota: 'KABUPATEN ACEH TAMIANG', kodeKota: null }, { id: 1115, provinsi: '11', namaKota: 'KABUPATEN NAGAN RAYA', kodeKota: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/admin/kota/provinsi/11?page=1', last: 'http://localhost:8000/admin/kota/provinsi/11?page=2', prev: null, next: 'http://localhost:8000/admin/kota/provinsi/11?page=2' } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 2, path: 'http://localhost:8000/admin/kota/provinsi/11', per_page: 15, to: 15, total: 23 } }
            tags:
                - Kota
        parameters:
            -
                in: path
                name: id
                description: 'id provinsi'
                example: 11
                required: true
                schema:
                    type: integer
    /admin/kota/create:
        post:
            summary: "Create Kota\nuntuk create kota"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 0, provinsi: 11, namaKota: ANJAY, kodeKota: ANJAY1 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 0, provinsi: 11, namaKota: ANJAY, kodeKota: ANJAY1 } }
            tags:
                - Kota
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 15
                                provinsi_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                nama_kota:
                                    type: string
                                    description: ''
                                    example: minima
                                kode_kota:
                                    type: string
                                    description: ''
                                    example: sit
                            required:
                                - id
                                - provinsi_id
                                - nama_kota
                                - kode_kota
    '/admin/kota/{id}/update':
        post:
            summary: "Update Kota\nuntuk update kota"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Kota berhasil diupdate'
                                    data: { id: 1, provinsi: 12, namaKota: ANJASjs, kodeKota: ANJASjs }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Kota berhasil diupdate' }
                                    data: { type: object, example: { id: 1, provinsi: 12, namaKota: ANJASjs, kodeKota: ANJASjs } }
            tags:
                - Kota
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                provinsi_id:
                                    type: integer
                                    description: ''
                                    example: 18
                                nama_kota:
                                    type: string
                                    description: unique
                                    example: debitis
                                kode_kota:
                                    type: string
                                    description: unique
                                    example: ut
        parameters:
            -
                in: path
                name: id
                description: 'id kota'
                example: quos
                required: true
                schema:
                    type: string
    '/admin/kota/{id}/delete':
        post:
            summary: "Delete Kota\nuntuk delete kota"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Kota berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Kota berhasil dihapus' }
            tags:
                - Kota
        parameters:
            -
                in: path
                name: id
                description: 'id kota'
                example: 3
                required: true
                schema:
                    type: integer
    /user/artikel/private:
        post:
            summary: "Private Artikel\nuntuk artikel yang diprivate"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                per_page:
                                    type: integer
                                    description: ''
                                    example: 19
                                page:
                                    type: integer
                                    description: ''
                                    example: 5
                            required:
                                - per_page
                                - page
    /user/artikel/public:
        get:
            summary: "Publik Artikel\nuntuk artikel yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[artikel]'
                    description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                    example: dolor
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                        example: dolor
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: veritatis
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: veritatis
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: similique
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: similique
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 2
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 2
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 7
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 7
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: et
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: et
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - Library
    '/user/artikel/{id}/view':
        get:
            summary: "View Artikel\nuntuk view artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, visible: null, created_at: null, updated_at: null }
                                properties:
                                    data: { type: object, example: { id: null, nama_kategori: null, judul: null, isi: null, image: null, user_id: null, views: null, visible: null, created_at: null, updated_at: null } }
            tags:
                - Library
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 10
                required: true
                schema:
                    type: integer
    /user/artikel:
        get:
            summary: 'My Artikel'
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[artikel]'
                    description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'''
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'''
                        example: ut
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'''
                    example: magnam
                    required: false
                    schema:
                        type: string
                        description: 'Filter by ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'''
                        example: magnam
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: dolorem
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: dolorem
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 18
                -
                    in: query
                    name: 'page[size]'
                    description: optional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 17
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: deserunt
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: deserunt
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: 1, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }, { id: 2, kategori_id: 1, judul: asdas, isi: asdas, image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel?page%5Bnumber%5D=1&page%5Bsize%5D=2&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel?page%5Bnumber%5D=1&page%5Bsize%5D=2&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel', per_page: 2, to: 2, total: 2 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: 1, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }, { id: 2, kategori_id: 1, judul: asdas, isi: asdas, image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel?page%5Bnumber%5D=1&page%5Bsize%5D=2&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel?page%5Bnumber%5D=1&page%5Bsize%5D=2&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel', per_page: 2, to: 2, total: 2 } }
            tags:
                - Library
    /user/artikel/create:
        post:
            summary: "Create Artikel\nuntuk create artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 13, kategori_id: '1', judul: judul13, isi: isi123, image: null, user_id: 1, views: null, created_at: '2021-02-24T02:59:17.000000Z', updated_at: '2021-02-24T02:59:17.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 13, kategori_id: '1', judul: judul13, isi: isi123, image: null, user_id: 1, views: null, created_at: '2021-02-24T02:59:17.000000Z', updated_at: '2021-02-24T02:59:17.000000Z' } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: neque
                                judul:
                                    type: string
                                    description: ''
                                    example: iure
                                isi:
                                    type: text
                                    description: ''
                                    example: qui
                                visible:
                                    type: enum
                                    description: '(''public'',''private'')'
                                    example: neque
                                objImage:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - nama_kategori
                                - judul
                                - isi
                                - visible
    '/user/artikel/{id}/update':
        post:
            summary: "Update artikel\nuntuk update artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Artikel berhasil diupdate'
                                    data: { id: 15, kategori_id: '2', judul: judul13, isi: isi123, image: 1614141329.jpg, user_id: 1, views: 0, created_at: '2021-02-24T04:18:26.000000Z', updated_at: '2021-02-24T04:35:29.000000Z' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Artikel berhasil diupdate' }
                                    data: { type: object, example: { id: 15, kategori_id: '2', judul: judul13, isi: isi123, image: 1614141329.jpg, user_id: 1, views: 0, created_at: '2021-02-24T04:18:26.000000Z', updated_at: '2021-02-24T04:35:29.000000Z' } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: optional
                                    example: consequatur
                                judul:
                                    type: string
                                    description: optional
                                    example: deserunt
                                isi:
                                    type: string
                                    description: optional
                                    example: cupiditate
                                image:
                                    type: string
                                    format: binary
                                    description: optional
                                visible:
                                    type: enum
                                    description: '(''public'',''private'')'
                                    example: maxime
                            required:
                                - visible
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 2
                required: true
                schema:
                    type: integer
    '/user/artikel/{id}/delete':
        post:
            summary: "Delete Artikel\nuntuk delete artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Artikel berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Artikel berhasil dihapus' }
            tags:
                - Library
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 14
                required: true
                schema:
                    type: integer
    /user/artikel-kategori:
        post:
            summary: "List Kategori Artikel\nuntuk list kategori artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { nama: 'Psikologi Industri', created_at: '2021-03-01T02:56:36.000000Z', updated_at: '2021-03-01T02:56:39.000000Z' }
                                    - { nama: 'Psikologi Klinis', created_at: '2021-03-01T02:56:05.000000Z', updated_at: '2021-03-01T02:56:08.000000Z' }
                                    - { nama: 'Psikologi Pendidikan', created_at: '2021-03-01T02:56:49.000000Z', updated_at: '2021-03-01T02:56:51.000000Z' }
            tags:
                - Library
    /user/artikel-kategori/create:
        post:
            summary: "Create Kategori Artikel\nuntuk create kategori artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { nama: asdasdsad }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { nama: asdasdsad } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: sit
                            required:
                                - nama
    '/user/artikel-kategori/{nama}/update':
        post:
            summary: "Update Kategori Artikel\nuntuk update kategori artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil update kategori artikel'
                                    data: 1
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil update kategori artikel' }
                                    data: { type: integer, example: 1 }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: consequatur
                            required:
                                - nama
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: error
                required: true
                schema:
                    type: string
    '/user/artikel-kategori/{nama}/delete':
        post:
            summary: "Delete Kategori Artikel\nuntuk hapus kategori artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil hapus kategori artikel'
                                    data: 1
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil hapus kategori artikel' }
                                    data: { type: integer, example: 1 }
            tags:
                - Library
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: voluptatum
                required: true
                schema:
                    type: string
    /user/artikel/like:
        post:
            summary: "Like Artikel\nuntuk like artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 5
                            required:
                                - id
    /user/artikel/unlike:
        post:
            summary: "Unlike Artikel\nuntuk unlike artikel"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 18
                            required:
                                - id
    /user/ebook/private:
        get:
            summary: "Private Ebook\nuntuk artikel yang diprivate"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                per_page:
                                    type: integer
                                    description: ''
                                    example: 17
                                page:
                                    type: integer
                                    description: ''
                                    example: 1
                            required:
                                - per_page
                                - page
    /user/ebook/public:
        get:
            summary: "Public Ebook\nuntuk ebook yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[artikel]'
                    description: 'select kolom ''bidang_id'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                    example: recusandae
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''bidang_id'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                        example: recusandae
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: officia
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: officia
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: voluptatem
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: voluptatem
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 13
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 13
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 4
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 4
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - Library
    /user/ebook:
        get:
            summary: 'My Ebook'
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[ebook]'
                    description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                    example: nesciunt
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                        example: nesciunt
                -
                    in: query
                    name: 'filter[judul]'
                    description: 'Filter by ''judul'''
                    example: corporis
                    required: false
                    schema:
                        type: string
                        description: 'Filter by ''judul'''
                        example: corporis
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: aut
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: aut
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 19
                -
                    in: query
                    name: 'page[size]'
                    description: optional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 17
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, user_id: 3, judul: dasdad, author: '', synopsis: null, visible: private, bidang_id: 0, file: null, image: null }]
                                    links: { first: 'http://localhost:8000/user/ebook?page%5Bnumber%5D=1', last: 'http://localhost:8000/user/ebook?page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/ebook', per_page: 100, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 3, user_id: 3, judul: dasdad, author: '', synopsis: null, visible: private, bidang_id: 0, file: null, image: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/ebook?page%5Bnumber%5D=1', last: 'http://localhost:8000/user/ebook?page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/ebook', per_page: 100, to: 1, total: 1 } }
            tags:
                - Library
    '/user/ebook/{id}/view':
        get:
            summary: "View Ebook\nuntuk view ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, user_id: null, judul: null, author: null, synopsis: null, visible: null, bidang_id: null, file: null, image: null, created_at: null, nama: null, nama_lengkap: null, email: null, photo_profile: null }
                                properties:
                                    data: { type: object, example: { id: null, user_id: null, judul: null, author: null, synopsis: null, visible: null, bidang_id: null, file: null, image: null, created_at: null, nama: null, nama_lengkap: null, email: null, photo_profile: null } }
            tags:
                - Library
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 6
                required: true
                schema:
                    type: integer
    /user/ebook/create:
        post:
            summary: "Create Ebook\nuntuk create ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 3, user_id: 3, judul: placeat, author: dolor, synopsis: fuga, visible: private, bidang_id: '7', file: null, image: null }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 3, user_id: 3, judul: placeat, author: dolor, synopsis: fuga, visible: private, bidang_id: '7', file: null, image: null } }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                judul:
                                    type: string
                                    description: ''
                                    example: qui
                                author:
                                    type: string
                                    description: ''
                                    example: ullam
                                synopsis:
                                    type: text
                                    description: optional
                                    example: tenetur
                                visible:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                bidang_id:
                                    type: integer
                                    description: ''
                                    example: 7
                                file:
                                    type: string
                                    format: binary
                                    description: optional
                                image:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - judul
                                - author
                                - visible
                                - bidang_id
    '/user/ebook/{id}/update':
        post:
            summary: "Update Ebook\nuntuk update ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Ebook berhasil diupdate'
                                    data: { id: 3, user_id: 3, judul: blanditiis, author: possimus, synopsis: corrupti, visible: private, bidang_id: '11', file: null, image: null }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Ebook berhasil diupdate' }
                                    data: { type: object, example: { id: 3, user_id: 3, judul: blanditiis, author: possimus, synopsis: corrupti, visible: private, bidang_id: '11', file: null, image: null } }
            tags:
                - Library
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                judul:
                                    type: string
                                    description: optional
                                    example: quidem
                                author:
                                    type: string
                                    description: optional
                                    example: consectetur
                                synopsis:
                                    type: text
                                    description: optional
                                    example: omnis
                                visible:
                                    type: string
                                    description: optional
                                    example: sint
                                bidang_id:
                                    type: integer
                                    description: optional
                                    example: 18
                                file:
                                    type: string
                                    format: binary
                                    description: optional
                                image:
                                    type: string
                                    format: binary
                                    description: optional
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 8
                required: true
                schema:
                    type: integer
    '/user/ebook/{id}/delete':
        post:
            summary: "Delete Ebook\nuntuk delete ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Ebook berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Ebook berhasil dihapus' }
            tags:
                - Library
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 20
                required: true
                schema:
                    type: integer
    /user/ebook/like:
        post:
            summary: "Like Ebook\nuntuk like ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 12
                            required:
                                - id
    /user/ebook/unlike:
        post:
            summary: "Unlike Ebook\nuntuk unlike ebook"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 2
                            required:
                                - id
    '/admin/moderator/{id}/assign':
        post:
            summary: "Assign Moderator Forum\nuntuk assign moderator forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil assign moderator'
                                    data: { user_id: '3', nama_kategori: 'Psikologi Industri', updated_at: '2021-03-03T08:45:43.000000Z', created_at: '2021-03-03T08:45:43.000000Z', id: 1 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil assign moderator' }
                                    data: { type: object, example: { user_id: '3', nama_kategori: 'Psikologi Industri', updated_at: '2021-03-03T08:45:43.000000Z', created_at: '2021-03-03T08:45:43.000000Z', id: 1 } }
            tags:
                - 'Moderator Forum'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: consequatur
                            required:
                                - nama_kategori
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 2
                required: true
                schema:
                    type: integer
    '/admin/moderator/{id}/unassign':
        post:
            summary: "Unassign Moderator Forum\nuntuk assign moderator forum"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil unassign moderator'
                                    data: 1
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil unassign moderator' }
                                    data: { type: integer, example: 1 }
            tags:
                - 'Moderator Forum'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: necessitatibus
                            required:
                                - nama_kategori
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 8
                required: true
                schema:
                    type: integer
    '/moderator/{kategori}/list':
        get:
            summary: 'List moderator per kategori'
            description: ''
            parameters:
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: est
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: est
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 5
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 5
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 8
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 8
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - 'Moderator Forum'
        parameters:
            -
                in: path
                name: kategori
                description: ''
                example: rem
                required: true
                schema:
                    type: string
    /admin/all-negara:
        get:
            summary: "DataProvider Negara\ndaftar collection negara dengan pagging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[negara]'
                    description: 'select kolom ''nama_negara'',''kode_negara'''
                    example: enim
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_negara'',''kode_negara'''
                        example: enim
                -
                    in: query
                    name: 'filter[nama_negara]'
                    description: 'Filter by nama negara.'
                    example: tenetur
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama negara.'
                        example: tenetur
                -
                    in: query
                    name: 'filter[kode_negara]'
                    description: 'Filter by nama negara.'
                    example: sint
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama negara.'
                        example: sint
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: dicta
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: dicta
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 10
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 10
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 12
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 12
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ nama_negara: Indonesia }]
                                    links: { first: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-negara', per_page: 30, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ nama_negara: Indonesia }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-negara', per_page: 30, to: 1, total: 1 } }
            tags:
                - Negara
    '/admin/negara/{id}/view':
        post:
            summary: 'View Negara'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama_negara: null, kode_negara: null }
                                properties:
                                    data: { type: object, example: { id: null, nama_negara: null, kode_negara: null } }
            tags:
                - Negara
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 9
                required: true
                schema:
                    type: integer
    /admin/negara/create:
        post:
            summary: "Create Negara\nuntuk create negara"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 196, namaNegara: titan, kodeNegara: titan1 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 196, namaNegara: titan, kodeNegara: titan1 } }
            tags:
                - Negara
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_negara:
                                    type: string
                                    description: unique
                                    example: vero
                                kode_negara:
                                    type: string
                                    description: unique
                                    example: nihil
                            required:
                                - nama_negara
                                - kode_negara
    '/admin/negara/{id}/update':
        post:
            summary: "Update Negara\nuntuk update negara"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Negara berhasil diupdate'
                                    data: { id: 1, namaNegara: titan2, kodeNegara: titan2 }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Negara berhasil diupdate' }
                                    data: { type: object, example: { id: 1, namaNegara: titan2, kodeNegara: titan2 } }
            tags:
                - Negara
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_negara:
                                    type: string
                                    description: ''
                                    example: minus
                                kode_negara:
                                    type: string
                                    description: unique
                                    example: reprehenderit
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 8
                required: true
                schema:
                    type: integer
    '/admin/negara/{id}/delete':
        post:
            summary: "Delete Negara\nuntuk delete negara"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Negara berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Negara berhasil dihapus' }
            tags:
                - Negara
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 20
                required: true
                schema:
                    type: integer
    /user/notifikasi:
        post:
            summary: "List Notifikasi\nuntuk list notifikasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Notifikasi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                page:
                                    type: integer
                                    description: ''
                                    example: 5
                                per_page:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - page
                                - per_page
    '/user/notifikasi/{id}/view':
        get:
            summary: "View Notifikasi\nsaat di view maka notifikasi akan hilang di list notifikasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Notifikasi
        parameters:
            -
                in: path
                name: id
                description: 'id notifikasi'
                example: vel
                required: true
                schema:
                    type: string
    /user/pengalaman:
        post:
            summary: MyPengalaman
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[pengalaman]'
                    description: "select kolom 'user_id','portfolio','project_kategori','service_kategori','klien','klien_kategori','lokasi',\n'member','role','start_date','end_date','deskripsi'"
                    example: ullam
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'user_id','portfolio','project_kategori','service_kategori','klien','klien_kategori','lokasi',\n'member','role','start_date','end_date','deskripsi'"
                        example: ullam
                -
                    in: query
                    name: 'filter[user_id]'
                    description: "Filter by 'user_id','portfolio','project_kategori','service_kategori','klien','klien_kategori','lokasi',\n'member','role','start_date','end_date','deskripsi'"
                    example: adipisci
                    required: false
                    schema:
                        type: string
                        description: "Filter by 'user_id','portfolio','project_kategori','service_kategori','klien','klien_kategori','lokasi',\n'member','role','start_date','end_date','deskripsi'"
                        example: adipisci
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: et
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: et
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 12
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 12
                -
                    in: query
                    name: 'page[size]'
                    description: optional
                    example: 14
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 14
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 2, portfolio: 'Project Based', project_kategori: a, service_kategori: as, klien: test, klien_kategori: child, lokasi: bdg, member: 5, role: 'y', start_date: '2000-02-15', end_date: '2000-01-02', deskripsi: sadasdasd }]
                                    links: { first: 'http://localhost:8000/user/pengalaman?fields%5Bpengalaman%5D=&filter%5Buser_id%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/pengalaman?fields%5Bpengalaman%5D=&filter%5Buser_id%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/pengalaman', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 2, portfolio: 'Project Based', project_kategori: a, service_kategori: as, klien: test, klien_kategori: child, lokasi: bdg, member: 5, role: 'y', start_date: '2000-02-15', end_date: '2000-01-02', deskripsi: sadasdasd }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/pengalaman?fields%5Bpengalaman%5D=&filter%5Buser_id%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/pengalaman?fields%5Bpengalaman%5D=&filter%5Buser_id%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/pengalaman', per_page: 15, to: 1, total: 1 } }
            tags:
                - Pengalaman
    /user/pengalaman/create:
        post:
            summary: "Create Pengalaman\nuntuk create pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 2, portfolio: 'Project Based', project_kategori: a, service_kategori: as, klien: test, klien_kategori: child, lokasi: bdg, member: '5', role: 'y', start_date: 2000/2/15, end_date: 2000/1/02, deskripsi: sadasdasd }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 2, portfolio: 'Project Based', project_kategori: a, service_kategori: as, klien: test, klien_kategori: child, lokasi: bdg, member: '5', role: 'y', start_date: 2000/2/15, end_date: 2000/1/02, deskripsi: sadasdasd } }
            tags:
                - Pengalaman
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                portfolio:
                                    type: enum
                                    description: '''Project Based'', ''Individual Based'''
                                    example: ut
                                project_kategori:
                                    type: string
                                    description: optional
                                    example: harum
                                service_kategori:
                                    type: string
                                    description: optional
                                    example: eos
                                klien:
                                    type: string
                                    description: optional
                                    example: porro
                                klien_kategori:
                                    type: string
                                    description: '''child'',''teenager'',''adult'',''the elderly'''
                                    example: omnis
                                lokasi:
                                    type: string
                                    description: optional
                                    example: et
                                member:
                                    type: integer
                                    description: optional
                                    example: 13
                                role:
                                    type: string
                                    description: optional
                                    example: hic
                                start_date:
                                    type: date
                                    description: optional
                                    example: asperiores
                                end_date:
                                    type: date
                                    description: optional
                                    example: ipsam
                                deskripsi:
                                    type: text
                                    description: optional
                                    example: aut
                            required:
                                - portfolio
                                - klien_kategori
    '/user/pengalaman/{id}/update':
        post:
            summary: "Update Pengalaman\nuntuk update pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Artikel berhasil diupdate'
                                    data: { id: 1, portfolio: 'Individual Based', project_kategori: a, service_kategori: asdsa, klien: test, klien_kategori: child, lokasi: bdg, member: 5, role: 'y', start_date: '2000-02-15', end_date: '2000-01-02', deskripsi: sadasdasd }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Artikel berhasil diupdate' }
                                    data: { type: object, example: { id: 1, portfolio: 'Individual Based', project_kategori: a, service_kategori: asdsa, klien: test, klien_kategori: child, lokasi: bdg, member: 5, role: 'y', start_date: '2000-02-15', end_date: '2000-01-02', deskripsi: sadasdasd } }
            tags:
                - Pengalaman
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                portfolio:
                                    type: enum
                                    description: 'optional ''Project Based'', ''Individual Based'''
                                    example: nihil
                                project_kategori:
                                    type: string
                                    description: optional
                                    example: aut
                                service_kategori:
                                    type: string
                                    description: optional
                                    example: quos
                                klien:
                                    type: string
                                    description: optional
                                    example: ad
                                klien_kategori:
                                    type: string
                                    description: 'optional ''child'',''teenager'',''adult'',''the elderly'''
                                    example: atque
                                lokasi:
                                    type: string
                                    description: optional
                                    example: dolorem
                                member:
                                    type: integer
                                    description: optional
                                    example: 20
                                role:
                                    type: string
                                    description: optional
                                    example: voluptates
                                start_date:
                                    type: date
                                    description: optional
                                    example: error
                                end_date:
                                    type: date
                                    description: optional
                                    example: necessitatibus
                                deskripsi:
                                    type: text
                                    description: optional
                                    example: maxime
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 16
                required: true
                schema:
                    type: integer
    '/user/pengalaman/{id}/delete':
        post:
            summary: "Delete Pengalaman\nuntuk hapus pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Pengalaman berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Pengalaman berhasil dihapus' }
            tags:
                - Pengalaman
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 2
                required: true
                schema:
                    type: integer
    '/user/pengalaman-kerja/{id}/view':
        get:
            summary: "List Pengalaman Kerja\nlist pengalaman tanpa pagging"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, idUser: 1, namaPerusahaan: 'pt indonesia', posisiJabatan: '', periode: '', keterangan: null }]
                                properties:
                                    data: { type: array, example: [{ id: 1, idUser: 1, namaPerusahaan: 'pt indonesia', posisiJabatan: '', periode: '', keterangan: null }], items: { type: object } }
            tags:
                - 'Pengalaman Kerja'
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 5
                required: true
                schema:
                    type: integer
    /user/pengalaman-kerja/create:
        post:
            summary: "create pengalaman Kerja\nuntuk create pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil tambah pengalaman'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil tambah pengalaman' }
                                    data: { type: string, example: data }
            tags:
                - 'Pengalaman Kerja'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_perusahaan:
                                    type: string
                                    description: ''
                                    example: eligendi
                                posisi_jabatan:
                                    type: string
                                    description: ''
                                    example: eveniet
                                periode:
                                    type: integer
                                    description: ''
                                    example: 9
                            required:
                                - nama_perusahaan
                                - posisi_jabatan
                                - periode
    '/user/pengalaman-kerja/{id}/update':
        post:
            summary: "update pengalaman Kerja\nuntuk update pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil update pengalaman'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil update pengalaman' }
                                    data: { type: string, example: data }
            tags:
                - 'Pengalaman Kerja'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_perusahaan:
                                    type: string
                                    description: ''
                                    example: non
                                posisi_jabatan:
                                    type: string
                                    description: ''
                                    example: deserunt
                                periode:
                                    type: integer
                                    description: ''
                                    example: 16
                            required:
                                - nama_perusahaan
                                - posisi_jabatan
                                - periode
        parameters:
            -
                in: path
                name: id
                description: 'id user'
                example: consequuntur
                required: true
                schema:
                    type: string
    '/user/pengalaman-kerja/{id}/delete':
        post:
            summary: "delete pengalaman Kerja\nuntuk hapus pengalaman"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Berhasil hapus pengalaman'
                                    data: data
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Berhasil hapus pengalaman' }
                                    data: { type: string, example: data }
            tags:
                - 'Pengalaman Kerja'
        parameters:
            -
                in: path
                name: id
                description: 'id pengalaman'
                example: illo
                required: true
                schema:
                    type: string
    '/user/portfolio/{id}/list':
        post:
            summary: "list Portfolio\nuntuk list portfolio"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, idUser: null, layanan: null, kategori: null, klien: null, start_date: null, end_date: null, type: null, location: null, deskripsi: null, position: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, idUser: null, layanan: null, kategori: null, klien: null, start_date: null, end_date: null, type: null, location: null, deskripsi: null, position: null }], items: { type: object } }
            tags:
                - Portfolio
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 13
                required: true
                schema:
                    type: integer
    '/user/portfolio/{id}/view':
        get:
            summary: "view Portfolio\nuntuk view portfolio"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, idUser: null, layanan: null, kategori: null, klien: null, start_date: null, end_date: null, type: null, location: null, deskripsi: null, position: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, idUser: null, layanan: null, kategori: null, klien: null, start_date: null, end_date: null, type: null, location: null, deskripsi: null, position: null }], items: { type: object } }
            tags:
                - Portfolio
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 19
                required: true
                schema:
                    type: integer
    /user/portfolio/create:
        post:
            summary: "Create Portfolio\nuntuk create portfolio"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 1, idUser: '1', layanan: test, kategori: test, klien: test, tanggal: '2021-2-3' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 1, idUser: '1', layanan: test, kategori: test, klien: test, tanggal: '2021-2-3' } }
            tags:
                - Portfolio
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                layanan:
                                    type: string
                                    description: ''
                                    example: illo
                                kategori:
                                    type: string
                                    description: ''
                                    example: amet
                                klien:
                                    type: string
                                    description: ''
                                    example: aliquam
                                start_date:
                                    type: date
                                    description: ''
                                    example: culpa
                                end_date:
                                    type: date
                                    description: ''
                                    example: recusandae
                                type:
                                    type: enum
                                    description: '(Project Based, Individual Service)'
                                    example: reprehenderit
                                location:
                                    type: text
                                    description: ''
                                    example: consequatur
                                deskripsi:
                                    type: text
                                    description: ''
                                    example: accusamus
                                position:
                                    type: string
                                    description: optional
                                    example: modi
                            required:
                                - layanan
                                - kategori
                                - klien
                                - start_date
                                - end_date
                                - type
                                - location
                                - deskripsi
    '/user/portfolio/{id}/update':
        post:
            summary: "update Portfolio\nuntuk update portfolio"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Portfolio berhasil diupdate'
                                    data: { id: 1, idUser: 1, layanan: test1, kategori: test1, klien: test, tanggal: '2021-02-03' }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Portfolio berhasil diupdate' }
                                    data: { type: object, example: { id: 1, idUser: 1, layanan: test1, kategori: test1, klien: test, tanggal: '2021-02-03' } }
            tags:
                - Portfolio
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                layanan:
                                    type: string
                                    description: optional
                                    example: deleniti
                                kategori:
                                    type: string
                                    description: optional
                                    example: odio
                                klien:
                                    type: string
                                    description: optional
                                    example: optio
                                tanggal:
                                    type: date
                                    description: optional
                                    example: nihil
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 11
                required: true
                schema:
                    type: integer
    '/user/portfolio/{id}/delete':
        post:
            summary: "Delete Portfolio\nuntuk delete portfolio"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Portfolio berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Portfolio berhasil dihapus' }
            tags:
                - Portfolio
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 13
                required: true
                schema:
                    type: integer
    /admin/all-provinsi:
        get:
            summary: "DataProvider Provinsi\ndaftar collection provinsi dengan pagging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[provinsi]'
                    description: 'select kolom ''negara_id'',''nama_provinsi'',''kode_provinsi'''
                    example: dicta
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''negara_id'',''nama_provinsi'',''kode_provinsi'''
                        example: dicta
                -
                    in: query
                    name: 'filter[nama_provinsi]'
                    description: 'Filter by nama provinsi.'
                    example: doloremque
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama provinsi.'
                        example: doloremque
                -
                    in: query
                    name: 'filter[kode_provinsi]'
                    description: 'Filter by kode provinsi.'
                    example: ea
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode provinsi.'
                        example: ea
                -
                    in: query
                    name: 'filter[negara_id]'
                    description: 'Filter by negara id.'
                    example: id
                    required: false
                    schema:
                        type: string
                        description: 'Filter by negara id.'
                        example: id
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: vel
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: vel
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 18
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 13
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 13
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 11, negaraId: null, namaProvinsi: ACEH, kodeProvinsi: null }, { id: 12, negaraId: null, namaProvinsi: 'SUMATERA UTARA', kodeProvinsi: null }, { id: 13, negaraId: null, namaProvinsi: 'SUMATERA BARAT', kodeProvinsi: null }, { id: 14, negaraId: null, namaProvinsi: RIAU, kodeProvinsi: null }, { id: 15, negaraId: null, namaProvinsi: JAMBI, kodeProvinsi: null }, { id: 16, negaraId: null, namaProvinsi: 'SUMATERA SELATAN', kodeProvinsi: null }, { id: 17, negaraId: null, namaProvinsi: BENGKULU, kodeProvinsi: null }, { id: 18, negaraId: null, namaProvinsi: LAMPUNG, kodeProvinsi: null }, { id: 19, negaraId: null, namaProvinsi: 'KEPULAUAN BANGKA BELITUNG', kodeProvinsi: null }, { id: 21, negaraId: null, namaProvinsi: 'KEPULAUAN RIAU', kodeProvinsi: null }, { id: 31, negaraId: null, namaProvinsi: 'DKI JAKARTA', kodeProvinsi: null }, { id: 32, negaraId: null, namaProvinsi: 'JAWA BARAT', kodeProvinsi: null }, { id: 33, negaraId: null, namaProvinsi: 'JAWA TENGAH', kodeProvinsi: null }, { id: 34, negaraId: null, namaProvinsi: 'DI YOGYAKARTA', kodeProvinsi: null }, { id: 35, negaraId: null, namaProvinsi: 'JAWA TIMUR', kodeProvinsi: null }, { id: 36, negaraId: null, namaProvinsi: BANTEN, kodeProvinsi: null }, { id: 51, negaraId: null, namaProvinsi: BALI, kodeProvinsi: null }, { id: 52, negaraId: null, namaProvinsi: 'NUSA TENGGARA BARAT', kodeProvinsi: null }, { id: 53, negaraId: null, namaProvinsi: 'NUSA TENGGARA TIMUR', kodeProvinsi: null }, { id: 61, negaraId: null, namaProvinsi: 'KALIMANTAN BARAT', kodeProvinsi: null }, { id: 62, negaraId: null, namaProvinsi: 'KALIMANTAN TENGAH', kodeProvinsi: null }, { id: 63, negaraId: null, namaProvinsi: 'KALIMANTAN SELATAN', kodeProvinsi: null }, { id: 64, negaraId: null, namaProvinsi: 'KALIMANTAN TIMUR', kodeProvinsi: null }, { id: 65, negaraId: null, namaProvinsi: 'KALIMANTAN UTARA', kodeProvinsi: null }, { id: 71, negaraId: null, namaProvinsi: 'SULAWESI UTARA', kodeProvinsi: null }, { id: 72, negaraId: null, namaProvinsi: 'SULAWESI TENGAH', kodeProvinsi: null }, { id: 73, negaraId: null, namaProvinsi: 'SULAWESI SELATAN', kodeProvinsi: null }, { id: 74, negaraId: null, namaProvinsi: 'SULAWESI TENGGARA', kodeProvinsi: null }, { id: 75, negaraId: null, namaProvinsi: GORONTALO, kodeProvinsi: null }, { id: 76, negaraId: null, namaProvinsi: 'SULAWESI BARAT', kodeProvinsi: null }, { id: 81, negaraId: null, namaProvinsi: MALUKU, kodeProvinsi: null }, { id: 82, negaraId: null, namaProvinsi: 'MALUKU UTARA', kodeProvinsi: null }, { id: 91, negaraId: null, namaProvinsi: 'PAPUA BARAT', kodeProvinsi: null }, { id: 94, negaraId: null, namaProvinsi: PAPUA, kodeProvinsi: null }]
                                properties:
                                    data: { type: array, example: [{ id: 11, negaraId: null, namaProvinsi: ACEH, kodeProvinsi: null }, { id: 12, negaraId: null, namaProvinsi: 'SUMATERA UTARA', kodeProvinsi: null }, { id: 13, negaraId: null, namaProvinsi: 'SUMATERA BARAT', kodeProvinsi: null }, { id: 14, negaraId: null, namaProvinsi: RIAU, kodeProvinsi: null }, { id: 15, negaraId: null, namaProvinsi: JAMBI, kodeProvinsi: null }, { id: 16, negaraId: null, namaProvinsi: 'SUMATERA SELATAN', kodeProvinsi: null }, { id: 17, negaraId: null, namaProvinsi: BENGKULU, kodeProvinsi: null }, { id: 18, negaraId: null, namaProvinsi: LAMPUNG, kodeProvinsi: null }, { id: 19, negaraId: null, namaProvinsi: 'KEPULAUAN BANGKA BELITUNG', kodeProvinsi: null }, { id: 21, negaraId: null, namaProvinsi: 'KEPULAUAN RIAU', kodeProvinsi: null }, { id: 31, negaraId: null, namaProvinsi: 'DKI JAKARTA', kodeProvinsi: null }, { id: 32, negaraId: null, namaProvinsi: 'JAWA BARAT', kodeProvinsi: null }, { id: 33, negaraId: null, namaProvinsi: 'JAWA TENGAH', kodeProvinsi: null }, { id: 34, negaraId: null, namaProvinsi: 'DI YOGYAKARTA', kodeProvinsi: null }, { id: 35, negaraId: null, namaProvinsi: 'JAWA TIMUR', kodeProvinsi: null }, { id: 36, negaraId: null, namaProvinsi: BANTEN, kodeProvinsi: null }, { id: 51, negaraId: null, namaProvinsi: BALI, kodeProvinsi: null }, { id: 52, negaraId: null, namaProvinsi: 'NUSA TENGGARA BARAT', kodeProvinsi: null }, { id: 53, negaraId: null, namaProvinsi: 'NUSA TENGGARA TIMUR', kodeProvinsi: null }, { id: 61, negaraId: null, namaProvinsi: 'KALIMANTAN BARAT', kodeProvinsi: null }, { id: 62, negaraId: null, namaProvinsi: 'KALIMANTAN TENGAH', kodeProvinsi: null }, { id: 63, negaraId: null, namaProvinsi: 'KALIMANTAN SELATAN', kodeProvinsi: null }, { id: 64, negaraId: null, namaProvinsi: 'KALIMANTAN TIMUR', kodeProvinsi: null }, { id: 65, negaraId: null, namaProvinsi: 'KALIMANTAN UTARA', kodeProvinsi: null }, { id: 71, negaraId: null, namaProvinsi: 'SULAWESI UTARA', kodeProvinsi: null }, { id: 72, negaraId: null, namaProvinsi: 'SULAWESI TENGAH', kodeProvinsi: null }, { id: 73, negaraId: null, namaProvinsi: 'SULAWESI SELATAN', kodeProvinsi: null }, { id: 74, negaraId: null, namaProvinsi: 'SULAWESI TENGGARA', kodeProvinsi: null }, { id: 75, negaraId: null, namaProvinsi: GORONTALO, kodeProvinsi: null }, { id: 76, negaraId: null, namaProvinsi: 'SULAWESI BARAT', kodeProvinsi: null }, { id: 81, negaraId: null, namaProvinsi: MALUKU, kodeProvinsi: null }, { id: 82, negaraId: null, namaProvinsi: 'MALUKU UTARA', kodeProvinsi: null }, { id: 91, negaraId: null, namaProvinsi: 'PAPUA BARAT', kodeProvinsi: null }, { id: 94, negaraId: null, namaProvinsi: PAPUA, kodeProvinsi: null }], items: { type: object } }
            tags:
                - Provinsi
    '/admin/provinsi/{id}/view':
        post:
            summary: 'View Provinsi'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, negara_id: null, nama_provinsi: null, kode_provinsi: null }
                                properties:
                                    data: { type: object, example: { id: null, negara_id: null, nama_provinsi: null, kode_provinsi: null } }
            tags:
                - Provinsi
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 18
                required: true
                schema:
                    type: integer
    '/admin/provinsi/negara/{id}':
        get:
            summary: "List Provinsi by Negara\nuntuk list provinsi by negara"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 11, negaraId: '1', namaProvinsi: ACEH, kodeProvinsi: null }]
                                    links: { first: 'http://localhost:8000/admin/provinsi/negara/1?page=1', last: 'http://localhost:8000/admin/provinsi/negara/1?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/provinsi/negara/1', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 11, negaraId: '1', namaProvinsi: ACEH, kodeProvinsi: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/admin/provinsi/negara/1?page=1', last: 'http://localhost:8000/admin/provinsi/negara/1?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/provinsi/negara/1', per_page: 15, to: 1, total: 1 } }
            tags:
                - Provinsi
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 4
                required: true
                schema:
                    type: integer
    /admin/provinsi/create:
        post:
            summary: "Create Provinsi\nuntuk create provinsi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'data berhasil disimpan!'
                                    data: { id: 0, negaraId: '1', namaProvinsi: Hutan, kodeProvinsi: 21e }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'data berhasil disimpan!' }
                                    data: { type: object, example: { id: 0, negaraId: '1', namaProvinsi: Hutan, kodeProvinsi: 21e } }
            tags:
                - Provinsi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_provinsi:
                                    type: string
                                    description: ''
                                    example: expedita
                                negara_id:
                                    type: integer
                                    description: ''
                                    example: 2
                                kode_provinsi:
                                    type: string
                                    description: ''
                                    example: vitae
                            required:
                                - nama_provinsi
                                - negara_id
                                - kode_provinsi
    '/admin/provinsi/{id}/update':
        post:
            summary: "Update Provinsi\nuntuk update provinsi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Kota berhasil diupdate'
                                    data: { id: 1, negaraId: '1', namaProvinsi: butan, kodeProvinsi: 21e }
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Kota berhasil diupdate' }
                                    data: { type: object, example: { id: 1, negaraId: '1', namaProvinsi: butan, kodeProvinsi: 21e } }
            tags:
                - Provinsi
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_provinsi:
                                    type: string
                                    description: unique
                                    example: dignissimos
                                negara_id:
                                    type: integer
                                    description: ''
                                    example: 5
                                kode_provinsi:
                                    type: string
                                    description: unique
                                    example: quam
        parameters:
            -
                in: path
                name: id
                description: 'id provinsi'
                example: 11
                required: true
                schema:
                    type: integer
    '/admin/provinsi/{id}/delete':
        post:
            summary: "Delete Provinsi\nuntuk delete provinsi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Provinsi berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Provinsi berhasil dihapus' }
            tags:
                - Provinsi
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 15
                required: true
                schema:
                    type: integer
    '/admin/list-psikolog/{type}/{value}':
        get:
            summary: "List Psikolog\nuntuk list psikolog di halaman admin"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[users]'
                    description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                    example: aut
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                        example: aut
                -
                    in: query
                    name: 'filter[username]'
                    description: 'Filter by username.'
                    example: enim
                    required: false
                    schema:
                        type: string
                        description: 'Filter by username.'
                        example: enim
                -
                    in: query
                    name: 'filter[nama_lengkap]'
                    description: 'Filter by nama lengkap.'
                    example: tempore
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama lengkap.'
                        example: tempore
                -
                    in: query
                    name: 'filter[kota1_id]'
                    description: 'Filter by kota 1.'
                    example: ea
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 1.'
                        example: ea
                -
                    in: query
                    name: 'filter[kota2_id]'
                    description: 'Filter by kota 2.'
                    example: molestiae
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 2.'
                        example: molestiae
                -
                    in: query
                    name: 'filter[bidang_id]'
                    description: 'Filter by bidang id.'
                    example: quidem
                    required: false
                    schema:
                        type: string
                        description: 'Filter by bidang id.'
                        example: quidem
                -
                    in: query
                    name: 'filter[universitas_id]'
                    description: 'Filter by universitas id.'
                    example: sunt
                    required: false
                    schema:
                        type: string
                        description: 'Filter by universitas id.'
                        example: sunt
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: enim
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: enim
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 19
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 1
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }]
                                    links: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 } }
            tags:
                - Psikolog
        parameters:
            -
                in: path
                name: type
                description: ''
                example: vero
                required: true
                schema:
                    type: string
            -
                in: path
                name: value
                description: ''
                example: quasi
                required: true
                schema:
                    type: string
    '/user/{id}/view':
        get:
            summary: "view psikolog\nuntuk view psikolog"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: data
                                properties:
                                    data: { type: string, example: data }
            tags:
                - Psikolog
        parameters:
            -
                in: path
                name: id
                description: 'id user'
                example: 17
                required: true
                schema:
                    type: integer
    '/user/{username}/view/username':
        get:
            summary: "view psikolog username\nuntuk view psikolog username"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: data
                                properties:
                                    data: { type: string, example: data }
            tags:
                - Psikolog
        parameters:
            -
                in: path
                name: username
                description: ''
                example: in
                required: true
                schema:
                    type: string
    '/user/{id}/photo-profile':
        post:
            summary: "photo profile\nuntuk upload foto profil"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: succes
                                    message: 'Berhasil upload photo profil'
                                    data: data
                                properties:
                                    status: { type: string, example: succes }
                                    message: { type: string, example: 'Berhasil upload photo profil' }
                                    data: { type: string, example: data }
            tags:
                - Psikolog
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                objPhoto:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - objPhoto
        parameters:
            -
                in: path
                name: id
                description: 'id user'
                example: 11
                required: true
                schema:
                    type: integer
    '/user/{id}/profile':
        post:
            summary: "update profile\nuntuk update semua profil psikolog"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Berhasil update profile'
                                    data: data
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Berhasil update profile' }
                                    data: { type: string, example: data }
            tags:
                - Psikolog
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: email
                                    description: ''
                                    example: sunt
                                role_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                status:
                                    type: integer
                                    description: ''
                                    example: 2
                                api_token:
                                    type: string
                                    description: ''
                                    example: aliquid
                                remember_token:
                                    type: string
                                    description: ''
                                    example: quas
                                nama_lengkap:
                                    type: string
                                    description: ''
                                    example: nam
                                tempat_lahir:
                                    type: string
                                    description: ''
                                    example: laboriosam
                                kota1_id:
                                    type: integer
                                    description: ''
                                    example: 9
                                kota2_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                no_hp:
                                    type: integer
                                    description: ''
                                    example: 7
                                jurusan_profesi:
                                    type: string
                                    description: ''
                                    example: nobis
                                tahun_masuk:
                                    type: integer
                                    description: ''
                                    example: 14
                                tahun_lulus:
                                    type: integer
                                    description: ''
                                    example: 15
                                nomor_ijazah:
                                    type: string
                                    description: ''
                                    example: odit
                                no_sipp:
                                    type: integer
                                    description: ''
                                    example: 7
                                bidang_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                skill_kompetensi:
                                    type: string
                                    description: ''
                                    example: ducimus
                                profile_singkat:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                longitude:
                                    type: string
                                    description: ''
                                    example: nesciunt
                                latitude:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                jenis_kelamin:
                                    type: string
                                    description: ''
                                    example: cum
                                photo_profile:
                                    type: string
                                    format: binary
                                    description: ''
                                agama:
                                    type: enum
                                    description: ''
                                    example: ipsa
                                layanan:
                                    type: enum
                                    description: ''
                                    example: quo
        parameters:
            -
                in: path
                name: id
                description: 'id user'
                example: 11
                required: true
                schema:
                    type: integer
    /user/update-akun:
        post:
            summary: "Update Akun\nuntuk update akun"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Psikolog
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 11
                required: true
                schema:
                    type: integer
    /user/my-profile:
        get:
            summary: "My Profile\nuntuk melihan profile sendiri"
            description: ''
            parameters:
                -
                    in: query
                    name: include
                    description: "get data relasi (dataKota1,dataKota2,dataBidang,dataModerator,dataUniversitas,\ndataJurusan,dataArtikel,dataEbook)."
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: "get data relasi (dataKota1,dataKota2,dataBidang,dataModerator,dataUniversitas,\ndataJurusan,dataArtikel,dataEbook)."
                        example: ut
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Psikolog
    /user/kolega:
        get:
            summary: "List Kolega\nuntuk list kolega"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[users]'
                    description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                    example: veritatis
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                        example: veritatis
                -
                    in: query
                    name: 'filter[username]'
                    description: 'Filter by username.'
                    example: sapiente
                    required: false
                    schema:
                        type: string
                        description: 'Filter by username.'
                        example: sapiente
                -
                    in: query
                    name: 'filter[nama_lengkap]'
                    description: 'Filter by nama lengkap.'
                    example: ullam
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama lengkap.'
                        example: ullam
                -
                    in: query
                    name: 'filter[kota1_id]'
                    description: 'Filter by kota 1.'
                    example: nam
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 1.'
                        example: nam
                -
                    in: query
                    name: 'filter[kota2_id]'
                    description: 'Filter by kota 2.'
                    example: necessitatibus
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 2.'
                        example: necessitatibus
                -
                    in: query
                    name: 'filter[bidang_id]'
                    description: 'Filter by bidang id.'
                    example: in
                    required: false
                    schema:
                        type: string
                        description: 'Filter by bidang id.'
                        example: in
                -
                    in: query
                    name: 'filter[universitas_id]'
                    description: 'Filter by universitas id.'
                    example: sunt
                    required: false
                    schema:
                        type: string
                        description: 'Filter by universitas id.'
                        example: sunt
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: aliquam
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: aliquam
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 7
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 7
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 7
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 7
                -
                    in: query
                    name: include
                    description: "get data relasi (dataKota1,dataKota2,dataBidang,dataModerator,\ndataUniversitas,dataJurusan,dataArtikel,dataEbook)."
                    example: sit
                    required: false
                    schema:
                        type: string
                        description: "get data relasi (dataKota1,dataKota2,dataBidang,dataModerator,\ndataUniversitas,dataJurusan,dataArtikel,dataEbook)."
                        example: sit
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }]
                                    links: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 } }
            tags:
                - Psikolog
    /general/all-universitas:
        get:
            summary: "List Universitas\ndata universitas tanpa paging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[universitas]'
                    description: 'select kolom ''nama'''
                    example: ipsa
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama'''
                        example: ipsa
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by nama universitas.'
                    example: autem
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama universitas.'
                        example: autem
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: non
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: non
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataJurusan).'
                    example: sit
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataJurusan).'
                        example: sit
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\r\n    \"data\": [\r\n        {\r\n            \"id\": 1,\r\n            \"nama\": \"Universitas Gajah Mada\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"nama\": \"ITENASx\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"nama\": \"Universitas Padjadjaran\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"nama\": \"IT\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"nama\": \"ITB\"\r\n        },\r\n    ]\r\n}"
            tags:
                - 'Public API'
            security: []
    /general/all-jurusan:
        get:
            summary: "List Jurusan\ndata jurusan"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[jurusan]'
                    description: 'select kolom ''kode'',''universitas_id'',''nama'''
                    example: voluptas
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''kode'',''universitas_id'',''nama'''
                        example: voluptas
                -
                    in: query
                    name: 'filter[universitas_id]'
                    description: 'Filter by universitas ID.'
                    example: 16
                    required: false
                    schema:
                        type: integer
                        description: 'Filter by universitas ID.'
                        example: 16
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by nama jurusan.'
                    example: quisquam
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama jurusan.'
                        example: quisquam
                -
                    in: query
                    name: 'filter[kode]'
                    description: 'Filter by kode jurusan.'
                    example: vel
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode jurusan.'
                        example: vel
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: porro
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: porro
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUniversitas).'
                    example: omnis
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUniversitas).'
                        example: omnis
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 2
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 2
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 20
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 20
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kode: KLI, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }, { id: 2, kode: PIO, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }]
                                properties:
                                    data: { type: array, example: [{ id: 1, kode: KLI, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }, { id: 2, kode: PIO, nama: null, dataUniversitas: { id: 1, nama: 'Universitas Gajah Mada' } }], items: { type: object } }
            tags:
                - 'Public API'
            security: []
    /general/all-kota:
        get:
            summary: "List Kota\ndata kota"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[kota]'
                    description: 'select kolom ''provinsi_id'',''nama_kota'',''kode_kota'''
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''provinsi_id'',''nama_kota'',''kode_kota'''
                        example: ut
                -
                    in: query
                    name: 'filter[nama_kota]'
                    description: 'Filter by nama kota.'
                    example: facere
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama kota.'
                        example: facere
                -
                    in: query
                    name: 'filter[kode_kota]'
                    description: 'Filter by kode kota.'
                    example: rerum
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode kota.'
                        example: rerum
                -
                    in: query
                    name: 'filter[provinsi_id]'
                    description: 'Filter by provinsi id.'
                    example: a
                    required: false
                    schema:
                        type: string
                        description: 'Filter by provinsi id.'
                        example: a
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: quo
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: quo
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 18
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 9
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 9
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ nama_kota: 'Kab. Simeulue', kode_kota: null }, { nama_kota: 'Kab. Aceh Singkil', kode_kota: null }, { nama_kota: 'Kab. Aceh Selatan', kode_kota: null }, { nama_kota: 'Kab. Aceh Tenggara', kode_kota: null }, { nama_kota: 'Kab. Aceh Timur', kode_kota: null }, { nama_kota: 'Kab. Aceh Tengah', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat', kode_kota: null }, { nama_kota: 'Kab. Aceh Besar', kode_kota: null }, { nama_kota: 'Kab. Pidie', kode_kota: null }, { nama_kota: 'Kab. Bireuen', kode_kota: null }, { nama_kota: 'Kab. Aceh Utara', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat Daya', kode_kota: null }, { nama_kota: 'Kab. Gayo Lues', kode_kota: null }, { nama_kota: 'Kab. Aceh Tamiang', kode_kota: null }, { nama_kota: 'Kab. Nagan Raya', kode_kota: null }, { nama_kota: 'Kab. Aceh Jaya', kode_kota: null }, { nama_kota: 'Kab. Bener Meriah', kode_kota: null }, { nama_kota: 'Kab. Pidie Jaya', kode_kota: null }, { nama_kota: 'Kota Banda Aceh', kode_kota: null }, { nama_kota: 'Kota Sabang', kode_kota: null }, { nama_kota: 'Kota Langsa', kode_kota: null }, { nama_kota: 'Kota Lhokseumawe', kode_kota: null }, { nama_kota: 'Kota Subulussalam', kode_kota: null }, { nama_kota: 'Kab. Nias', kode_kota: null }, { nama_kota: 'Kab. Mandailing Natal', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Selatan', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Tengah', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Utara', kode_kota: null }, { nama_kota: 'Kab. Toba Samosir', kode_kota: null }, { nama_kota: 'Kab. Labuhan Batu', kode_kota: null }]
                                    links: { first: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=17', prev: null, next: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=2' }
                                    meta: { current_page: 1, from: 1, last_page: 17, path: 'http://localhost:8000/general/all-kota', per_page: 30, to: 30, total: 499 }
                                properties:
                                    data: { type: array, example: [{ nama_kota: 'Kab. Simeulue', kode_kota: null }, { nama_kota: 'Kab. Aceh Singkil', kode_kota: null }, { nama_kota: 'Kab. Aceh Selatan', kode_kota: null }, { nama_kota: 'Kab. Aceh Tenggara', kode_kota: null }, { nama_kota: 'Kab. Aceh Timur', kode_kota: null }, { nama_kota: 'Kab. Aceh Tengah', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat', kode_kota: null }, { nama_kota: 'Kab. Aceh Besar', kode_kota: null }, { nama_kota: 'Kab. Pidie', kode_kota: null }, { nama_kota: 'Kab. Bireuen', kode_kota: null }, { nama_kota: 'Kab. Aceh Utara', kode_kota: null }, { nama_kota: 'Kab. Aceh Barat Daya', kode_kota: null }, { nama_kota: 'Kab. Gayo Lues', kode_kota: null }, { nama_kota: 'Kab. Aceh Tamiang', kode_kota: null }, { nama_kota: 'Kab. Nagan Raya', kode_kota: null }, { nama_kota: 'Kab. Aceh Jaya', kode_kota: null }, { nama_kota: 'Kab. Bener Meriah', kode_kota: null }, { nama_kota: 'Kab. Pidie Jaya', kode_kota: null }, { nama_kota: 'Kota Banda Aceh', kode_kota: null }, { nama_kota: 'Kota Sabang', kode_kota: null }, { nama_kota: 'Kota Langsa', kode_kota: null }, { nama_kota: 'Kota Lhokseumawe', kode_kota: null }, { nama_kota: 'Kota Subulussalam', kode_kota: null }, { nama_kota: 'Kab. Nias', kode_kota: null }, { nama_kota: 'Kab. Mandailing Natal', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Selatan', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Tengah', kode_kota: null }, { nama_kota: 'Kab. Tapanuli Utara', kode_kota: null }, { nama_kota: 'Kab. Toba Samosir', kode_kota: null }, { nama_kota: 'Kab. Labuhan Batu', kode_kota: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=17', prev: null, next: 'http://localhost:8000/general/all-kota?fields%5Bkota%5D=nama_kota%2Ckode_kota&page%5Bnumber%5D=2' } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 17, path: 'http://localhost:8000/general/all-kota', per_page: 30, to: 30, total: 499 } }
            tags:
                - 'Public API'
            security: []
    /general/all-provinsi:
        get:
            summary: "List Provinsi\ndata provinsi"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[provinsi]'
                    description: 'select kolom ''negara_id'',''nama_provinsi'',''kode_provinsi'''
                    example: omnis
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''negara_id'',''nama_provinsi'',''kode_provinsi'''
                        example: omnis
                -
                    in: query
                    name: 'filter[nama_provinsi]'
                    description: 'Filter by nama provinsi.'
                    example: non
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama provinsi.'
                        example: non
                -
                    in: query
                    name: 'filter[kode_provinsi]'
                    description: 'Filter by kode provinsi.'
                    example: est
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kode provinsi.'
                        example: est
                -
                    in: query
                    name: 'filter[negara_id]'
                    description: 'Filter by negara id.'
                    example: excepturi
                    required: false
                    schema:
                        type: string
                        description: 'Filter by negara id.'
                        example: excepturi
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: et
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: et
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 10
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 10
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 17
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 11, negaraId: null, namaProvinsi: ACEH, kodeProvinsi: null }, { id: 12, negaraId: null, namaProvinsi: 'SUMATERA UTARA', kodeProvinsi: null }, { id: 13, negaraId: null, namaProvinsi: 'SUMATERA BARAT', kodeProvinsi: null }, { id: 14, negaraId: null, namaProvinsi: RIAU, kodeProvinsi: null }, { id: 15, negaraId: null, namaProvinsi: JAMBI, kodeProvinsi: null }, { id: 16, negaraId: null, namaProvinsi: 'SUMATERA SELATAN', kodeProvinsi: null }, { id: 17, negaraId: null, namaProvinsi: BENGKULU, kodeProvinsi: null }, { id: 18, negaraId: null, namaProvinsi: LAMPUNG, kodeProvinsi: null }, { id: 19, negaraId: null, namaProvinsi: 'KEPULAUAN BANGKA BELITUNG', kodeProvinsi: null }, { id: 21, negaraId: null, namaProvinsi: 'KEPULAUAN RIAU', kodeProvinsi: null }, { id: 31, negaraId: null, namaProvinsi: 'DKI JAKARTA', kodeProvinsi: null }, { id: 32, negaraId: null, namaProvinsi: 'JAWA BARAT', kodeProvinsi: null }, { id: 33, negaraId: null, namaProvinsi: 'JAWA TENGAH', kodeProvinsi: null }, { id: 34, negaraId: null, namaProvinsi: 'DI YOGYAKARTA', kodeProvinsi: null }, { id: 35, negaraId: null, namaProvinsi: 'JAWA TIMUR', kodeProvinsi: null }, { id: 36, negaraId: null, namaProvinsi: BANTEN, kodeProvinsi: null }, { id: 51, negaraId: null, namaProvinsi: BALI, kodeProvinsi: null }, { id: 52, negaraId: null, namaProvinsi: 'NUSA TENGGARA BARAT', kodeProvinsi: null }, { id: 53, negaraId: null, namaProvinsi: 'NUSA TENGGARA TIMUR', kodeProvinsi: null }, { id: 61, negaraId: null, namaProvinsi: 'KALIMANTAN BARAT', kodeProvinsi: null }, { id: 62, negaraId: null, namaProvinsi: 'KALIMANTAN TENGAH', kodeProvinsi: null }, { id: 63, negaraId: null, namaProvinsi: 'KALIMANTAN SELATAN', kodeProvinsi: null }, { id: 64, negaraId: null, namaProvinsi: 'KALIMANTAN TIMUR', kodeProvinsi: null }, { id: 65, negaraId: null, namaProvinsi: 'KALIMANTAN UTARA', kodeProvinsi: null }, { id: 71, negaraId: null, namaProvinsi: 'SULAWESI UTARA', kodeProvinsi: null }, { id: 72, negaraId: null, namaProvinsi: 'SULAWESI TENGAH', kodeProvinsi: null }, { id: 73, negaraId: null, namaProvinsi: 'SULAWESI SELATAN', kodeProvinsi: null }, { id: 74, negaraId: null, namaProvinsi: 'SULAWESI TENGGARA', kodeProvinsi: null }, { id: 75, negaraId: null, namaProvinsi: GORONTALO, kodeProvinsi: null }, { id: 76, negaraId: null, namaProvinsi: 'SULAWESI BARAT', kodeProvinsi: null }, { id: 81, negaraId: null, namaProvinsi: MALUKU, kodeProvinsi: null }, { id: 82, negaraId: null, namaProvinsi: 'MALUKU UTARA', kodeProvinsi: null }, { id: 91, negaraId: null, namaProvinsi: 'PAPUA BARAT', kodeProvinsi: null }, { id: 94, negaraId: null, namaProvinsi: PAPUA, kodeProvinsi: null }]
                                properties:
                                    data: { type: array, example: [{ id: 11, negaraId: null, namaProvinsi: ACEH, kodeProvinsi: null }, { id: 12, negaraId: null, namaProvinsi: 'SUMATERA UTARA', kodeProvinsi: null }, { id: 13, negaraId: null, namaProvinsi: 'SUMATERA BARAT', kodeProvinsi: null }, { id: 14, negaraId: null, namaProvinsi: RIAU, kodeProvinsi: null }, { id: 15, negaraId: null, namaProvinsi: JAMBI, kodeProvinsi: null }, { id: 16, negaraId: null, namaProvinsi: 'SUMATERA SELATAN', kodeProvinsi: null }, { id: 17, negaraId: null, namaProvinsi: BENGKULU, kodeProvinsi: null }, { id: 18, negaraId: null, namaProvinsi: LAMPUNG, kodeProvinsi: null }, { id: 19, negaraId: null, namaProvinsi: 'KEPULAUAN BANGKA BELITUNG', kodeProvinsi: null }, { id: 21, negaraId: null, namaProvinsi: 'KEPULAUAN RIAU', kodeProvinsi: null }, { id: 31, negaraId: null, namaProvinsi: 'DKI JAKARTA', kodeProvinsi: null }, { id: 32, negaraId: null, namaProvinsi: 'JAWA BARAT', kodeProvinsi: null }, { id: 33, negaraId: null, namaProvinsi: 'JAWA TENGAH', kodeProvinsi: null }, { id: 34, negaraId: null, namaProvinsi: 'DI YOGYAKARTA', kodeProvinsi: null }, { id: 35, negaraId: null, namaProvinsi: 'JAWA TIMUR', kodeProvinsi: null }, { id: 36, negaraId: null, namaProvinsi: BANTEN, kodeProvinsi: null }, { id: 51, negaraId: null, namaProvinsi: BALI, kodeProvinsi: null }, { id: 52, negaraId: null, namaProvinsi: 'NUSA TENGGARA BARAT', kodeProvinsi: null }, { id: 53, negaraId: null, namaProvinsi: 'NUSA TENGGARA TIMUR', kodeProvinsi: null }, { id: 61, negaraId: null, namaProvinsi: 'KALIMANTAN BARAT', kodeProvinsi: null }, { id: 62, negaraId: null, namaProvinsi: 'KALIMANTAN TENGAH', kodeProvinsi: null }, { id: 63, negaraId: null, namaProvinsi: 'KALIMANTAN SELATAN', kodeProvinsi: null }, { id: 64, negaraId: null, namaProvinsi: 'KALIMANTAN TIMUR', kodeProvinsi: null }, { id: 65, negaraId: null, namaProvinsi: 'KALIMANTAN UTARA', kodeProvinsi: null }, { id: 71, negaraId: null, namaProvinsi: 'SULAWESI UTARA', kodeProvinsi: null }, { id: 72, negaraId: null, namaProvinsi: 'SULAWESI TENGAH', kodeProvinsi: null }, { id: 73, negaraId: null, namaProvinsi: 'SULAWESI SELATAN', kodeProvinsi: null }, { id: 74, negaraId: null, namaProvinsi: 'SULAWESI TENGGARA', kodeProvinsi: null }, { id: 75, negaraId: null, namaProvinsi: GORONTALO, kodeProvinsi: null }, { id: 76, negaraId: null, namaProvinsi: 'SULAWESI BARAT', kodeProvinsi: null }, { id: 81, negaraId: null, namaProvinsi: MALUKU, kodeProvinsi: null }, { id: 82, negaraId: null, namaProvinsi: 'MALUKU UTARA', kodeProvinsi: null }, { id: 91, negaraId: null, namaProvinsi: 'PAPUA BARAT', kodeProvinsi: null }, { id: 94, negaraId: null, namaProvinsi: PAPUA, kodeProvinsi: null }], items: { type: object } }
            tags:
                - 'Public API'
            security: []
    /general/all-negara:
        get:
            summary: "List Negara\ndata negara"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[negara]'
                    description: 'select kolom ''nama_negara'',''kode_negara'''
                    example: et
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_negara'',''kode_negara'''
                        example: et
                -
                    in: query
                    name: 'filter[nama_negara]'
                    description: 'Filter by nama negara.'
                    example: sit
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama negara.'
                        example: sit
                -
                    in: query
                    name: 'filter[kode_negara]'
                    description: 'Filter by nama negara.'
                    example: aut
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama negara.'
                        example: aut
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: quasi
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: quasi
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 15
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 15
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 20
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 20
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ nama_negara: Indonesia }]
                                    links: { first: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-negara', per_page: 30, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ nama_negara: Indonesia }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-negara?fields%5Bnegara%5D=nama_negara&filter%5Bnama_negara%5D=&sort=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-negara', per_page: 30, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
    /general/all-bidang:
        get:
            summary: "List Bidang\ndata bidang"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[bidang]'
                    description: 'select kolom ''nama'''
                    example: tenetur
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama'''
                        example: tenetur
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by ''nama'''
                    example: quis
                    required: false
                    schema:
                        type: string
                        description: 'Filter by ''nama'''
                        example: quis
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: rerum
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: rerum
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 10
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 10
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 18
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Psikologi Klinis' }, { id: 2, nama: 'Psikologi Industri' }, { id: 3, nama: 'Psikologi Pendidikan' }]
                                    links: { first: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-bidang', per_page: 30, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Psikologi Klinis' }, { id: 2, nama: 'Psikologi Industri' }, { id: 3, nama: 'Psikologi Pendidikan' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-bidang?page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-bidang', per_page: 30, to: 3, total: 3 } }
            tags:
                - 'Public API'
            security: []
    /general/all-psikolog:
        get:
            summary: "List Psikolog\nuntuk list psikolog"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[users]'
                    description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                    example: voluptas
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''kota1_id'',''kota2_id'',''bidang_id'''
                        example: voluptas
                -
                    in: query
                    name: 'filter[nama_lengkap]'
                    description: 'Filter by nama lengkap.'
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama lengkap.'
                        example: ut
                -
                    in: query
                    name: 'filter[kota1_id]'
                    description: 'Filter by kota 1.'
                    example: alias
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 1.'
                        example: alias
                -
                    in: query
                    name: 'filter[kota2_id]'
                    description: 'Filter by kota 2.'
                    example: sed
                    required: false
                    schema:
                        type: string
                        description: 'Filter by kota 2.'
                        example: sed
                -
                    in: query
                    name: 'filter[bidang_id]'
                    description: 'Filter by bidang id.'
                    example: consequatur
                    required: false
                    schema:
                        type: string
                        description: 'Filter by bidang id.'
                        example: consequatur
                -
                    in: query
                    name: 'filter[universitas_id]'
                    description: 'Filter by universitas id.'
                    example: voluptas
                    required: false
                    schema:
                        type: string
                        description: 'Filter by universitas id.'
                        example: voluptas
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: officiis
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: officiis
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 8
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 8
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 16
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 16
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataKota1,dataKota2,dataBidang,dataModerator).'
                    example: fugit
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataKota1,dataKota2,dataBidang,dataModerator).'
                        example: fugit
                -
                    in: query
                    name: umur1
                    description: optional
                    example: 5
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 5
                -
                    in: query
                    name: umur2
                    description: optional
                    example: 2
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 2
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }]
                                    links: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 3, nama_lengkap: null, tempat_lahir: null, tanggal_lahir: null, kota1_id: 1101, kota2_id: null, no_hp: null, universitas_id: null, jurusan_id: null, bidang_id: 1, tahun_masuk: null, tahun_lulus: null, nomor_ijazah: '12345678', no_sipp: null, skill_kompetensi: null, profile_singkat: null, jenis_kelamin: Laki-laki, photo_profile: null, relationships: [{ kota1: { data: { id: 1101, provinsi_id: 11, nama_kota: 'Kab. Simeulue', kode_kota: null } } }, { kota2: { data: null } }, { bidang: { data: { id: 1, nama: 'Psikologi Klinis', created_at: null, updated_at: null } } }] }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', last: 'http://localhost:8000/general/all-psikolog?include=dataKota1%2CdataKota2%2CdataBidang&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/general/all-psikolog', per_page: 100, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
    /general/all-artikel:
        get:
            summary: "List Artikel\nuntuk artikel yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[artikel]'
                    description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                    example: velit
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                        example: velit
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: neque
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: neque
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: sed
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: sed
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 4
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 4
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 15
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 15
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: maiores
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: maiores
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
    /general/all-ebook:
        get:
            summary: "List Ebook\nuntuk ebook yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[ebook]'
                    description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                    example: non
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                        example: non
                -
                    in: query
                    name: 'filter[judul]'
                    description: 'Filter by judul.'
                    example: accusamus
                    required: false
                    schema:
                        type: string
                        description: 'Filter by judul.'
                        example: accusamus
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: omnis
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: omnis
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 18
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 18
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 3
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
    '/general/artikel/{id}/view':
        get:
            summary: "View Artikel\nuntuk view artikel yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[artikel]'
                    description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                    example: distinctio
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''nama_kategori'',''judul'',''isi'',''image'',''user_id'',''views'',''visible'''
                        example: distinctio
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: explicabo
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: explicabo
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: pariatur
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: pariatur
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 1
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 9
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 9
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: praesentium
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: praesentium
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 11
                required: true
                schema:
                    type: integer
    '/general/ebook/{id}/view':
        get:
            summary: "View Ebook\nuntuk view ebook yang dishare"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[ebook]'
                    description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                    example: qui
                    required: false
                    schema:
                        type: string
                        description: 'select kolom ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                        example: qui
                -
                    in: query
                    name: 'filter[judul]'
                    description: 'Filter by ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                    example: perferendis
                    required: false
                    schema:
                        type: string
                        description: 'Filter by ''judul'',''author'',''synopsis'',''visible'',''bidang_id'',''file'',''image'''
                        example: perferendis
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: dolores
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: dolores
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 3
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 3
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 19
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }]
                                    links: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 }
                                properties:
                                    data: { type: array, example: [{ id: 1, kategori_id: null, judul: 1judul, isi: '', image: null, user_id: 1, views: 0, created_at: null, updated_at: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', last: 'http://localhost:8000/user/artikel/public?fields%5Bartikel%5D=&filter%5Bnama_kategori%5D=&sort=&page%5Bnumber%5D=&page%5Bsize%5D=&page%5Bnumber%5D=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/user/artikel/public', per_page: 15, to: 1, total: 1 } }
            tags:
                - 'Public API'
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 15
                required: true
                schema:
                    type: integer
    '/general/psikolog/{id}/view':
        get:
            summary: 'View General Psikolog'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16)'
                                    exception: Illuminate\Database\QueryException
                                    file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php'
                                    line: 671
                                    trace: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\PsikologController.php', line: 434, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: generalViewPsikolog, class: App\Http\Controllers\PsikologController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 234, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 170, function: handleDispatcherResponse, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'SQLSTATE[42S02]: Base table or view not found: 1146 Table ''pampsi_db.users'' doesn''t exist (SQL: select * from `users` where `id` = 16)' }
                                    exception: { type: string, example: Illuminate\Database\QueryException }
                                    file: { type: string, example: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php' }
                                    line: { type: integer, example: 671 }
                                    trace: { type: array, example: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 631, function: runQueryCallback, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Connection.php', line: 339, function: run, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2270, function: select, class: Illuminate\Database\Connection, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2258, function: runSelect, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2753, function: 'Illuminate\Database\Query\{closure}', class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Query\Builder.php', line: 2259, function: onceWithColumns, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 548, function: get, class: Illuminate\Database\Query\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Database\Eloquent\Builder.php', line: 532, function: getModels, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\PsikologController.php', line: 434, function: get, class: Illuminate\Database\Eloquent\Builder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: generalViewPsikolog, class: App\Http\Controllers\PsikologController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 234, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 170, function: handleDispatcherResponse, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - 'Public API'
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 16
                required: true
                schema:
                    type: integer
    '/general/user/{id}/view':
        get:
            summary: "view psikolog Public\nuntuk view psikolog"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: data
                                properties:
                                    data: { type: string, example: data }
            tags:
                - 'Public API'
        parameters:
            -
                in: path
                name: id
                description: 'id user'
                example: 3
                required: true
                schema:
                    type: integer
    '/general/user/{username}/view-username':
        get:
            summary: "view psikolog Public by username\nuntuk view psikolog by username"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: data
                                properties:
                                    data: { type: string, example: data }
            tags:
                - 'Public API'
        parameters:
            -
                in: path
                name: username
                description: ''
                example: perspiciatis
                required: true
                schema:
                    type: string
            -
                in: path
                name: id
                description: 'username user'
                example: 19
                required: true
                schema:
                    type: integer
    /general/survey:
        get:
            summary: 'List Survey Public'
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[survey]'
                    description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                    example: et
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                        example: et
                -
                    in: query
                    name: 'filter[id]'
                    description: 'Filter by id.'
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: 'Filter by id.'
                        example: ut
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: repellendus
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: repellendus
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 1
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 15
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 15
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser,dataSoal,dataJawaban).'
                    example: dolor
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser,dataSoal,dataJawaban).'
                        example: dolor
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                400:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Requested sort(s) `repellendus` is not allowed. Allowed sort(s) are `id, user_id, kategori, close, judul, keterangan, file_panduan`.'
                                    exception: Spatie\QueryBuilder\Exceptions\InvalidSortQuery
                                    file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Exceptions\InvalidSortQuery.php'
                                    line: 30
                                    trace: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Concerns\SortsQuery.php', line: 113, function: sortsNotAllowed, class: Spatie\QueryBuilder\Exceptions\InvalidSortQuery, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Concerns\SortsQuery.php', line: 31, function: ensureAllSortsExist, class: Spatie\QueryBuilder\QueryBuilder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\SurveyController.php', line: 81, function: allowedSorts, class: Spatie\QueryBuilder\QueryBuilder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: listSurveyPublic, class: App\Http\Controllers\SurveyController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }]
                                properties:
                                    message: { type: string, example: 'Requested sort(s) `repellendus` is not allowed. Allowed sort(s) are `id, user_id, kategori, close, judul, keterangan, file_panduan`.' }
                                    exception: { type: string, example: Spatie\QueryBuilder\Exceptions\InvalidSortQuery }
                                    file: { type: string, example: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Exceptions\InvalidSortQuery.php' }
                                    line: { type: integer, example: 30 }
                                    trace: { type: array, example: [{ file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Concerns\SortsQuery.php', line: 113, function: sortsNotAllowed, class: Spatie\QueryBuilder\Exceptions\InvalidSortQuery, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\spatie\laravel-query-builder\src\Concerns\SortsQuery.php', line: 31, function: ensureAllSortsExist, class: Spatie\QueryBuilder\QueryBuilder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\app\Http\Controllers\SurveyController.php', line: 81, function: allowedSorts, class: Spatie\QueryBuilder\QueryBuilder, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: listSurveyPublic, class: App\Http\Controllers\SurveyController, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 386, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 352, function: callControllerCallable, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 326, function: callLumenController, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 279, function: callControllerAction, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 264, function: callActionOnArrayBasedRoute, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 166, function: handleFoundRoute, class: Laravel\Lumen\Application, type: '->' }, { function: 'Laravel\Lumen\Concerns\{closure}', class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 48, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->' }, { function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Routing\Pipeline.php', line: 30, function: call_user_func }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Laravel\Lumen\Routing\{closure}', class: Laravel\Lumen\Routing\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 423, function: then, class: Illuminate\Pipeline\Pipeline, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 172, function: sendThroughPipeline, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Concerns\RoutesRequests.php', line: 92, function: dispatch, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 333, function: handle, class: Laravel\Lumen\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 37, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 596, function: call, class: Illuminate\Container\BoundMethod, type: '::' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 134, function: call, class: Illuminate\Container\Container, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Command\Command.php', line: 256, function: execute, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\vendor\laravel\lumen-framework\src\Console\Kernel.php', line: 116, function: run, class: Illuminate\Console\Application, type: '->' }, { file: 'D:\SEMESTER 6\Proyek Akhir\Backend PAMPsi\pam-backend\artisan', line: 35, function: handle, class: Laravel\Lumen\Console\Kernel, type: '->' }], items: { type: object } }
            tags:
                - 'Public API'
            security: []
    '/general/soal-jawaban/{id}/create':
        post:
            summary: "Survey soal jawaban create\nuntuk create jawaban pada soal"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Public API'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: repudiandae
                                email:
                                    type: string
                                    description: ''
                                    example: occaecati
                                jawaban:
                                    type: array
                                    description: ''
                                    example: voluptatem
                            required:
                                - nama
                                - email
                                - jawaban
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: delectus
                required: true
                schema:
                    type: string
    '/general/rekomendasi/{id}/list':
        get:
            summary: "List Rekomendasi Public\nuntuk list rekomendasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }], items: { type: object } }
            tags:
                - 'Public API'
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 19
                required: true
                schema:
                    type: integer
    /user/daftar:
        post:
            summary: "Register akun Psikolog\nuntuk pendaftaran akun user psikolog"
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Pendaftaran Berhasil'
                                    data: user
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Pendaftaran Berhasil' }
                                    data: { type: string, example: user }
            tags:
                - Registrasi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    description: ''
                                    example: quae
                                email:
                                    type: email
                                    description: ''
                                    example: sequi
                                password:
                                    type: password
                                    description: ''
                                    example: consequatur
                            required:
                                - username
                                - email
                                - password
            security: []
    /user/update:
        post:
            summary: "Input data alumni \nuntuk isi profile pendaftar setelah verifikasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Update user Berhasil'
                                    data: user
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Update user Berhasil' }
                                    data: { type: string, example: user }
            tags:
                - Registrasi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                tahun_masuk:
                                    type: integer
                                    description: ''
                                    example: 20
                                tahun_lulus:
                                    type: integer
                                    description: ''
                                    example: 15
                                jurusan_id:
                                    type: integer
                                    description: ''
                                    example: 17
                                universitas_id:
                                    type: integer
                                    description: ''
                                    example: 20
                                nomor_ijazah:
                                    type: string
                                    description: ''
                                    example: aperiam
                                nama_lengkap:
                                    type: string
                                    description: ''
                                    example: delectus
                                tempat_lahir:
                                    type: string
                                    description: ''
                                    example: delectus
                                kota1_id:
                                    type: integer
                                    description: ''
                                    example: 7
                                kota2_id:
                                    type: integer
                                    description: optional
                                    example: 11
                                no_hp:
                                    type: integer
                                    description: ''
                                    example: 1
                                bidang_id:
                                    type: integer
                                    description: ''
                                    example: 19
                            required:
                                - tahun_masuk
                                - tahun_lulus
                                - jurusan_id
                                - universitas_id
                                - nomor_ijazah
                                - nama_lengkap
                                - tempat_lahir
                                - kota1_id
                                - no_hp
                                - bidang_id
    /admin/import-alumni:
        post:
            summary: "Import Data Alumni UGM\nuntuk import data alumni"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Registrasi
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /admin/import-user:
        post:
            summary: 'Import Data User UGM'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Registrasi
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
                                    description: ''
                            required:
                                - file
    /admin/list-registran:
        get:
            summary: "List registran\nuntuk list pendaftar yang ada didaftar alumni"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n[\n     {\n  \"id\": 12,\n  \"nama\": \"bayu\",\n  \"status\": 0\n     }\n ]\n}"
            tags:
                - Registrasi
    /admin/unlist-registran:
        get:
            summary: "unlist registran\nuntuk pendaftar yang tidak terdaftar di data alumni"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 13, status: 0, nomor_ijazah: '76858576', no_ijazah: null }
            tags:
                - Registrasi
    /admin/confirm-registran:
        post:
            summary: "confirm registran\nuntuk verifikasi pendaftar oleh admin, status 1 = diterima, status 2 = ignore"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success/failed
                                    message: 'Confirm user Berhasil'
                                    data: user
                                properties:
                                    status: { type: string, example: success/failed }
                                    message: { type: string, example: 'Confirm user Berhasil' }
                                    data: { type: string, example: user }
            tags:
                - Registrasi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: ''
                                    example: 1
                                status:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - id
                                - status
    '/admin/ignore-registran/{id}':
        get:
            summary: 'Ignore registran'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Registrasi
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter.'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: sed
    '/user/rekomendasi/{id}/list':
        get:
            summary: "List Rekomendasi\nuntuk list rekomendasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }]
                                properties:
                                    data: { type: array, example: [{ id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }], items: { type: object } }
            tags:
                - Rekomendasi
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 20
                required: true
                schema:
                    type: integer
    /user/rekomendasi/create:
        post:
            summary: "Create Rekomendasi\nuntuk create rekomendasi"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }
                                properties:
                                    data: { type: object, example: { id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null } }
            tags:
                - Rekomendasi
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                penerima_rekomendasi:
                                    type: integer
                                    description: ''
                                    example: 5
                                catatan:
                                    type: string
                                    description: optional
                                    example: rerum
                            required:
                                - penerima_rekomendasi
    '/user/rekomendasi/{id}/update':
        post:
            summary: "Update Rekomendasi\nuntuk update rekomendasi, hanya pemberi dan penerima rekomendasi yang bisa update"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null }
                                properties:
                                    data: { type: object, example: { id: null, penerimaRekomendasi: null, pemberiRekomendasi: null, catatan: null } }
            tags:
                - Rekomendasi
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                penerima_rekomendasi:
                                    type: integer
                                    description: optional
                                    example: 2
                                catatan:
                                    type: string
                                    description: optional
                                    example: voluptatem
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 2
                required: true
                schema:
                    type: integer
    '/user/rekomendasi/{id}/delete':
        post:
            summary: "Delete Rekomendasi\nuntuk hapus rekomendasi, hanya pemberi dan penerima rekomendasi yang bisa hapus"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Rekomendasi berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Rekomendasi berhasil dihapus' }
            tags:
                - Rekomendasi
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 5
                required: true
                schema:
                    type: integer
    /user/survey:
        get:
            summary: "List Survey\nuntuk list survey"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[survey]'
                    description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                    example: odio
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                        example: odio
                -
                    in: query
                    name: 'filter[id]'
                    description: 'Filter by id.'
                    example: earum
                    required: false
                    schema:
                        type: string
                        description: 'Filter by id.'
                        example: earum
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: explicabo
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: explicabo
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 20
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 20
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 16
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 16
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser).'
                    example: consequuntur
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser).'
                        example: consequuntur
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Survey
    '/user/survey/{id}/view':
        get:
            summary: "View Survey\nuntuk view survey"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[survey]'
                    description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                    example: optio
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'id','user_id','kategori','close'\n,'judul','keterangan','file_panduan'"
                        example: optio
                -
                    in: query
                    name: 'filter[id]'
                    description: 'Filter by id.'
                    example: quidem
                    required: false
                    schema:
                        type: string
                        description: 'Filter by id.'
                        example: quidem
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: aut
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: aut
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 12
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 12
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 17
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 17
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataUser,dataSoal,dataJawaban).'
                    example: facilis
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataUser,dataSoal,dataJawaban).'
                        example: facilis
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Survey
        parameters:
            -
                in: path
                name: id
                description: ''
                example: nesciunt
                required: true
                schema:
                    type: string
    /user/survey/create:
        post:
            summary: "Create Survey\nuntuk create survey"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Survey
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                kategori:
                                    type: string
                                    description: ''
                                    example: quam
                                close:
                                    type: date
                                    description: ''
                                    example: aliquid
                                judul:
                                    type: string
                                    description: optional
                                    example: minima
                                keterangan:
                                    type: string
                                    description: optional
                                    example: dolor
                                objFile:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - kategori
                                - close
    '/user/survey/{id}/update':
        post:
            summary: "Update Survey\nuntuk update survey"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Survey
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                kategori:
                                    type: string
                                    description: optional
                                    example: nihil
                                close:
                                    type: date
                                    description: optional
                                    example: officia
                                judul:
                                    type: string
                                    description: optional
                                    example: culpa
                                keterangan:
                                    type: string
                                    description: optional
                                    example: nisi
                                objFile:
                                    type: string
                                    format: binary
                                    description: optional
        parameters:
            -
                in: path
                name: id
                description: ''
                example: delectus
                required: true
                schema:
                    type: string
    '/user/survey/{id}/delete':
        post:
            summary: "Delete Survey\nuntuk delete survey"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Survey
        parameters:
            -
                in: path
                name: id
                description: ''
                example: voluptatum
                required: true
                schema:
                    type: string
    /user/survey/response-by-me:
        get:
            summary: 'Survey response by me'
            description: ''
            parameters:
                -
                    in: query
                    name: page
                    description: optional
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 19
                -
                    in: query
                    name: per_page
                    description: 'inte optional'
                    example: quas
                    required: false
                    schema:
                        type: string
                        description: 'inte optional'
                        example: quas
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Survey
    '/user/soal/{id}/delete':
        get:
            summary: 'Survey soal delete soal'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Survey
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 10
                required: true
                schema:
                    type: integer
    /user/soal/pilihan:
        post:
            summary: 'Create soal & pilihan'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Survey
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: optional
                                    example: 15
                                survey_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                tipe:
                                    type: enum
                                    description: ''
                                    example: mollitia
                                soal:
                                    type: string
                                    description: ''
                                    example: nisi
                                pilihan:
                                    type: array
                                    description: ''
                                    example: est
                            required:
                                - survey_id
                                - tipe
    /admin/all-universitas:
        get:
            summary: "DataProvider Universitas\ndaftar collection universitas dengan pagging"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[universitas]'
                    description: 'select kolom.'
                    example: rem
                    required: false
                    schema:
                        type: string
                        description: 'select kolom.'
                        example: rem
                -
                    in: query
                    name: 'filter[nama]'
                    description: 'Filter by nama universitas.'
                    example: saepe
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama universitas.'
                        example: saepe
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: illo
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: illo
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataJurusan).'
                    example: suscipit
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataJurusan).'
                        example: suscipit
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 7
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 7
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 1
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 1
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Universitas Gajah Mada' }, { id: 2, nama: ITB }, { id: 3, nama: 'Universitas Padjadjaran' }, { id: 4, nama: ITENAS }]
                                    links: { first: 'http://localhost:8000/admin/all-universitas?page=1', last: 'http://localhost:8000/admin/all-universitas?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/all-universitas', per_page: 15, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Universitas Gajah Mada' }, { id: 2, nama: ITB }, { id: 3, nama: 'Universitas Padjadjaran' }, { id: 4, nama: ITENAS }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost:8000/admin/all-universitas?page=1', last: 'http://localhost:8000/admin/all-universitas?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, path: 'http://localhost:8000/admin/all-universitas', per_page: 15, to: 4, total: 4 } }
            tags:
                - Universitas
    '/admin/universitas/{id}/view':
        get:
            summary: 'View Universitas'
            description: ''
            parameters:
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataJurusan).'
                    example: sit
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataJurusan).'
                        example: sit
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: { id: null, nama: null }
                                properties:
                                    data: { type: object, example: { id: null, nama: null } }
            tags:
                - Universitas
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 3
                required: true
                schema:
                    type: integer
    /admin/universitas/create:
        post:
            summary: "Create Universitas\nuntuk create universitas"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "// respon berhasil disimpan\r\n{\r\n    \"status\": \"success\",\r\n    \"message\": \"data berhasil disimpan!\",\r\n    \"data\": {\r\n        \"id\": 3,\r\n        \"nama\": \"Universitas Padjadjaran\"\r\n    }\r\n}\r\n\r\n// respon validasi error\r\n{\r\n    \"status\": \"failed\",\r\n    \"message\": \"data gagal disimpan!\",\r\n    \"data\": {\r\n        \"errors\": {\r\n            \"nama\": [\r\n                \"kolom nama sudah digunakan!\",\r\n                \"panjang karakter nama kurang dari 20\"\r\n            ]\r\n        }\r\n    }\r\n}"
            tags:
                - Universitas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: sint
                            required:
                                - nama
    '/admin/universitas/{id}/update':
        post:
            summary: "Update Universitas\nuntuk update universitas"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "// respon berhasil disimpan\r\n{\r\n    \"status\": \"success\",\r\n    \"message\": \"data berhasil disimpan!\",\r\n    \"data\": {\r\n        \"id\": 3,\r\n        \"nama\": \"Universitas Padjadjaran\"\r\n    }\r\n}\r\n\r\n// respon validasi error\r\n{\r\n    \"status\": \"failed\",\r\n    \"message\": \"data gagal disimpan!\",\r\n    \"data\": {\r\n        \"errors\": {\r\n            \"nama\": [\r\n                \"kolom nama sudah digunakan!\",\r\n                \"panjang karakter nama kurang dari 20\"\r\n            ]\r\n        }\r\n    }\r\n}"
            tags:
                - Universitas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: 'nama harus unik dari yg lain'
                                    example: assumenda
                            required:
                                - nama
        parameters:
            -
                in: path
                name: id
                description: 'id universitas'
                example: 18
                required: true
                schema:
                    type: integer
    '/admin/universitas/{id}/delete':
        post:
            summary: "Delete Universitas\nuntuk delete universitas"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    status: success
                                    message: 'Data Universitas berhasil dihapus'
                                properties:
                                    status: { type: string, example: success }
                                    message: { type: string, example: 'Data Universitas berhasil dihapus' }
            tags:
                - Universitas
        parameters:
            -
                in: path
                name: id
                description: 'id universitas'
                example: dolores
                required: true
                schema:
                    type: string
    /admin/vacancies/create:
        post:
            summary: "Create Vacancies\nuntuk create vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                perusahaan:
                                    type: string
                                    description: ''
                                    example: ut
                                judul:
                                    type: string
                                    description: ''
                                    example: commodi
                                kota_id:
                                    type: integer
                                    description: ''
                                    example: 15
                                nama_kategori:
                                    type: string
                                    description: ''
                                    example: dolor
                                deskripsi:
                                    type: string
                                    description: optional
                                    example: amet
                                start_date:
                                    type: date
                                    description: optional
                                    example: quia
                                end_date:
                                    type: date
                                    description: ''
                                    example: saepe
                                objLogo:
                                    type: string
                                    format: binary
                                    description: optional
                            required:
                                - perusahaan
                                - judul
                                - kota_id
                                - nama_kategori
                                - end_date
    '/admin/vacancies/{id}/update':
        post:
            summary: "Update Vacancies\nuntuk update vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
            requestBody:
                required: false
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                perusahaan:
                                    type: string
                                    description: optional
                                    example: iste
                                judul:
                                    type: string
                                    description: optional
                                    example: repudiandae
                                kota_id:
                                    type: integer
                                    description: optional
                                    example: 19
                                nama_kategori:
                                    type: string
                                    description: optional
                                    example: totam
                                deskripsi:
                                    type: string
                                    description: optional
                                    example: quasi
                                start_date:
                                    type: date
                                    description: optional
                                    example: sed
                                end_date:
                                    type: date
                                    description: optional
                                    example: ut
                                objLogo:
                                    type: string
                                    format: binary
                                    description: optional
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 14
                required: true
                schema:
                    type: integer
    '/admin/vacancies/{id}/delete':
        post:
            summary: "Delete Vacancies\nuntuk menghapus vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
        parameters:
            -
                in: path
                name: id
                description: ''
                example: 20
                required: true
                schema:
                    type: integer
    /admin/vacancies-kategori/create:
        post:
            summary: "Create Kategori Vacancies\nuntuk create kategori vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: eveniet
    '/admin/vacancies-kategori/{nama}/update':
        post:
            summary: "Update Kategori Vacancies\nuntuk update kategori vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama:
                                    type: string
                                    description: ''
                                    example: aperiam
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: ducimus
                required: true
                schema:
                    type: string
    '/admin/vacancies-kategori/{nama}/delete':
        post:
            summary: "Delete Kategori Vacancies\nuntuk delete kategori vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
        parameters:
            -
                in: path
                name: nama
                description: ''
                example: ducimus
                required: true
                schema:
                    type: string
    /user/vacancies:
        get:
            summary: "List Vacancies\nuntuk list vacancies"
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[agenda]'
                    description: "select kolom 'perusahaan','judul','kota_id','nama_kategori',\n'deskripsi','start_date','end_date','logo'"
                    example: ut
                    required: false
                    schema:
                        type: string
                        description: "select kolom 'perusahaan','judul','kota_id','nama_kategori',\n'deskripsi','start_date','end_date','logo'"
                        example: ut
                -
                    in: query
                    name: 'filter[nama_kategori]'
                    description: 'Filter by nama nama_kategori.'
                    example: voluptates
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama nama_kategori.'
                        example: voluptates
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: consectetur
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: consectetur
                -
                    in: query
                    name: 'page[number]'
                    description: optional
                    example: 11
                    required: false
                    schema:
                        type: integer
                        description: optional
                        example: 11
                -
                    in: query
                    name: 'page[size]'
                    description: oprional
                    example: 19
                    required: false
                    schema:
                        type: integer
                        description: oprional
                        example: 19
                -
                    in: query
                    name: include
                    description: 'get data relasi (dataKota)'
                    example: maiores
                    required: false
                    schema:
                        type: string
                        description: 'get data relasi (dataKota)'
                        example: maiores
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Vacancies
    /user/vacancies-kategori:
        get:
            summary: "List Kategori Vacancies\nuntuk list kategori vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Vacancies
    /user/vacancies/applyers:
        get:
            summary: 'List applyer'
            description: ''
            parameters:
                -
                    in: query
                    name: 'fields[vacancies_id]'
                    description: 'select kolom.'
                    example: hic
                    required: false
                    schema:
                        type: string
                        description: 'select kolom.'
                        example: hic
                -
                    in: query
                    name: 'filter[users.username]'
                    description: 'Filter by nama vacancies.'
                    example: modi
                    required: false
                    schema:
                        type: string
                        description: 'Filter by nama vacancies.'
                        example: modi
                -
                    in: query
                    name: sort
                    description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                    example: dolorem
                    required: false
                    schema:
                        type: string
                        description: 'sort data berdasarkan kolom. tambah tanda (-) untuk DESC.'
                        example: dolorem
                -
                    in: query
                    name: 'page[number]'
                    description: 'nomor halaman.'
                    example: 5
                    required: false
                    schema:
                        type: integer
                        description: 'nomor halaman.'
                        example: 5
                -
                    in: query
                    name: 'page[size]'
                    description: 'jumlah item per halaman.'
                    example: 12
                    required: false
                    schema:
                        type: integer
                        description: 'jumlah item per halaman.'
                        example: 12
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Vacancies
    '/user/vacancies/applyers/{id}/status':
        post:
            summary: 'update status applyer'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Vacancies
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: string
                                    description: ''
                                    example: itaque
                            required:
                                - status
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter. id applyer'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: et
    /user/vacancies/my-apply:
        get:
            summary: 'my apply'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Vacancies
    '/user/vacancies/{id}/apply':
        get:
            summary: "Apply Vacancies\nuntuk apply vacancies"
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Vacancies
        parameters:
            -
                in: path
                name: id
                description: 'Optional parameter. idVacancies'
                required: true
                schema:
                    type: integer
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: 13
components:
    securitySchemes:
        default:
            type: http
            scheme: bearer
            description: ''
security:
    -
        default: []
